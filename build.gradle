group 'io.sharedstreets'
version '1.0'

buildscript {
    repositories {  jcenter()
        mavenCentral()}
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        //classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    } //  Note PF : this plugin does not support resource transformation (needed for akka configuration files
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

import com.github.jengelman.gradle.plugins.shadow.tasks.*

sourceCompatibility = 1.8

repositories {
    maven { url "http://repository.apache.org" }
    mavenCentral()
}

def flinkversion = "1.4.1"
def protobufversion = "3.4.0"

dependencies {

    compile 'org.slf4j:slf4j-api:1.7.5'
    compile files('external/osmosis-osm-binary.jar')
    compile 'com.esri.geometry:esri-geometry-api:1.2.1'
    compile "org.apache.flink:flink-java:${flinkversion}"
    compile "org.apache.flink:flink-streaming-java_2.11:${flinkversion}"
    compile "org.apache.flink:flink-clients_2.11:${flinkversion}"
    compile "com.google.protobuf:protobuf-java:${protobufversion}"
    compile "com.jsoniter:jsoniter:0.9.15"
    compile "javassist:javassist:3.12.1.GA"
    compile "net.sf.geographiclib:GeographicLib-Java:1.49"
    compile 'org.slf4j:slf4j-api:1.7.10'
    compile 'org.slf4j:slf4j-log4j12:1.7.10'
    compile 'commons-cli:commons-cli:1.4'
    compile 'org.apache.commons:commons-lang3:3.7'
    compile 'com.github.davidmoten:rtree:0.8-RC10'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'io.sharedstreets.matcher.BatchMatcher'
        )
    }
}


// this task generate a jar bundle that include all the flink stack,
// and permit to use the soft from a command line
task allJars(type: ShadowJar) {
    from sourceSets.main.output
    configurations = [project.configurations.compile]
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) { resource = 'reference.conf' }

    manifest {
        attributes 'Implementation-Title': 'sharedstreets-matcher', 'Implementation-Version': version
        attributes 'Main-Class': 'io.sharedstreets.matcher.BatchMatcher'
    }
}
