package io.sharedstreets.matcher.output.protobuf;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speeds.proto

public final class SharedStreetsSpeedsProto {
  private SharedStreetsSpeedsProto() {}
  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
            (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code PeriodSize}
   */
  public enum PeriodSize
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OneSecond = 0;</code>
     */
    OneSecond(0),
    /**
     * <code>FiveSeconds = 1;</code>
     */
    FiveSeconds(1),
    /**
     * <code>TenSeconds = 2;</code>
     */
    TenSeconds(2),
    /**
     * <code>FifteenSeconds = 3;</code>
     */
    FifteenSeconds(3),
    /**
     * <code>ThirtySeconds = 4;</code>
     */
    ThirtySeconds(4),
    /**
     * <code>OneMinute = 5;</code>
     */
    OneMinute(5),
    /**
     * <code>FiveMinutes = 6;</code>
     */
    FiveMinutes(6),
    /**
     * <code>TenMinutes = 7;</code>
     */
    TenMinutes(7),
    /**
     * <code>FifteenMinutes = 8;</code>
     */
    FifteenMinutes(8),
    /**
     * <code>ThirtyMinutes = 9;</code>
     */
    ThirtyMinutes(9),
    /**
     * <code>OneHour = 10;</code>
     */
    OneHour(10),
    /**
     * <code>OneDay = 11;</code>
     */
    OneDay(11),
    /**
     * <code>OneWeek = 12;</code>
     */
    OneWeek(12),
    /**
     * <code>OneMonth = 13;</code>
     */
    OneMonth(13),
    /**
     * <code>OneYear = 14;</code>
     */
    OneYear(14),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OneSecond = 0;</code>
     */
    public static final int OneSecond_VALUE = 0;
    /**
     * <code>FiveSeconds = 1;</code>
     */
    public static final int FiveSeconds_VALUE = 1;
    /**
     * <code>TenSeconds = 2;</code>
     */
    public static final int TenSeconds_VALUE = 2;
    /**
     * <code>FifteenSeconds = 3;</code>
     */
    public static final int FifteenSeconds_VALUE = 3;
    /**
     * <code>ThirtySeconds = 4;</code>
     */
    public static final int ThirtySeconds_VALUE = 4;
    /**
     * <code>OneMinute = 5;</code>
     */
    public static final int OneMinute_VALUE = 5;
    /**
     * <code>FiveMinutes = 6;</code>
     */
    public static final int FiveMinutes_VALUE = 6;
    /**
     * <code>TenMinutes = 7;</code>
     */
    public static final int TenMinutes_VALUE = 7;
    /**
     * <code>FifteenMinutes = 8;</code>
     */
    public static final int FifteenMinutes_VALUE = 8;
    /**
     * <code>ThirtyMinutes = 9;</code>
     */
    public static final int ThirtyMinutes_VALUE = 9;
    /**
     * <code>OneHour = 10;</code>
     */
    public static final int OneHour_VALUE = 10;
    /**
     * <code>OneDay = 11;</code>
     */
    public static final int OneDay_VALUE = 11;
    /**
     * <code>OneWeek = 12;</code>
     */
    public static final int OneWeek_VALUE = 12;
    /**
     * <code>OneMonth = 13;</code>
     */
    public static final int OneMonth_VALUE = 13;
    /**
     * <code>OneYear = 14;</code>
     */
    public static final int OneYear_VALUE = 14;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PeriodSize valueOf(int value) {
      return forNumber(value);
    }

    public static PeriodSize forNumber(int value) {
      switch (value) {
        case 0: return OneSecond;
        case 1: return FiveSeconds;
        case 2: return TenSeconds;
        case 3: return FifteenSeconds;
        case 4: return ThirtySeconds;
        case 5: return OneMinute;
        case 6: return FiveMinutes;
        case 7: return TenMinutes;
        case 8: return FifteenMinutes;
        case 9: return ThirtyMinutes;
        case 10: return OneHour;
        case 11: return OneDay;
        case 12: return OneWeek;
        case 13: return OneMonth;
        case 14: return OneYear;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PeriodSize>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            PeriodSize> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PeriodSize>() {
              public PeriodSize findValueByNumber(int number) {
                return PeriodSize.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return SharedStreetsSpeedsProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final PeriodSize[] VALUES = values();

    public static PeriodSize valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PeriodSize(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PeriodSize)
  }

  public interface TemporalPeriodOrBuilder extends
          // @@protoc_insertion_point(interface_extends:TemporalPeriod)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.PeriodSize periodSize = 1;</code>
     */
    int getPeriodSizeValue();
    /**
     * <code>.PeriodSize periodSize = 1;</code>
     */
    SharedStreetsSpeedsProto.PeriodSize getPeriodSize();

    /**
     * <pre>
     * period offset from unix epoch
     * </pre>
     *
     * <code>uint64 periodOffset = 2;</code>
     */
    long getPeriodOffset();
  }
  /**
   * Protobuf type {@code TemporalPeriod}
   */
  public  static final class TemporalPeriod extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:TemporalPeriod)
          TemporalPeriodOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use TemporalPeriod.newBuilder() to construct.
    private TemporalPeriod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TemporalPeriod() {
      periodSize_ = 0;
      periodOffset_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TemporalPeriod(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              periodSize_ = rawValue;
              break;
            }
            case 16: {

              periodOffset_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return SharedStreetsSpeedsProto.internal_static_TemporalPeriod_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return SharedStreetsSpeedsProto.internal_static_TemporalPeriod_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      SharedStreetsSpeedsProto.TemporalPeriod.class, SharedStreetsSpeedsProto.TemporalPeriod.Builder.class);
    }

    public static final int PERIODSIZE_FIELD_NUMBER = 1;
    private int periodSize_;
    /**
     * <code>.PeriodSize periodSize = 1;</code>
     */
    public int getPeriodSizeValue() {
      return periodSize_;
    }
    /**
     * <code>.PeriodSize periodSize = 1;</code>
     */
    public SharedStreetsSpeedsProto.PeriodSize getPeriodSize() {
      SharedStreetsSpeedsProto.PeriodSize result = SharedStreetsSpeedsProto.PeriodSize.valueOf(periodSize_);
      return result == null ? SharedStreetsSpeedsProto.PeriodSize.UNRECOGNIZED : result;
    }

    public static final int PERIODOFFSET_FIELD_NUMBER = 2;
    private long periodOffset_;
    /**
     * <pre>
     * period offset from unix epoch
     * </pre>
     *
     * <code>uint64 periodOffset = 2;</code>
     */
    public long getPeriodOffset() {
      return periodOffset_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (periodSize_ != SharedStreetsSpeedsProto.PeriodSize.OneSecond.getNumber()) {
        output.writeEnum(1, periodSize_);
      }
      if (periodOffset_ != 0L) {
        output.writeUInt64(2, periodOffset_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (periodSize_ != SharedStreetsSpeedsProto.PeriodSize.OneSecond.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(1, periodSize_);
      }
      if (periodOffset_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt64Size(2, periodOffset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof SharedStreetsSpeedsProto.TemporalPeriod)) {
        return super.equals(obj);
      }
      SharedStreetsSpeedsProto.TemporalPeriod other = (SharedStreetsSpeedsProto.TemporalPeriod) obj;

      boolean result = true;
      result = result && periodSize_ == other.periodSize_;
      result = result && (getPeriodOffset()
              == other.getPeriodOffset());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PERIODSIZE_FIELD_NUMBER;
      hash = (53 * hash) + periodSize_;
      hash = (37 * hash) + PERIODOFFSET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getPeriodOffset());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SharedStreetsSpeedsProto.TemporalPeriod parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.TemporalPeriod parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.TemporalPeriod parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.TemporalPeriod parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.TemporalPeriod parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.TemporalPeriod parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.TemporalPeriod parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.TemporalPeriod parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.TemporalPeriod parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.TemporalPeriod parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.TemporalPeriod parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.TemporalPeriod parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SharedStreetsSpeedsProto.TemporalPeriod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TemporalPeriod}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:TemporalPeriod)
            SharedStreetsSpeedsProto.TemporalPeriodOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SharedStreetsSpeedsProto.internal_static_TemporalPeriod_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SharedStreetsSpeedsProto.internal_static_TemporalPeriod_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        SharedStreetsSpeedsProto.TemporalPeriod.class, SharedStreetsSpeedsProto.TemporalPeriod.Builder.class);
      }

      // Construct using SharedStreetsSpeedsProto.TemporalPeriod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        periodSize_ = 0;

        periodOffset_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return SharedStreetsSpeedsProto.internal_static_TemporalPeriod_descriptor;
      }

      public SharedStreetsSpeedsProto.TemporalPeriod getDefaultInstanceForType() {
        return SharedStreetsSpeedsProto.TemporalPeriod.getDefaultInstance();
      }

      public SharedStreetsSpeedsProto.TemporalPeriod build() {
        SharedStreetsSpeedsProto.TemporalPeriod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SharedStreetsSpeedsProto.TemporalPeriod buildPartial() {
        SharedStreetsSpeedsProto.TemporalPeriod result = new SharedStreetsSpeedsProto.TemporalPeriod(this);
        result.periodSize_ = periodSize_;
        result.periodOffset_ = periodOffset_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SharedStreetsSpeedsProto.TemporalPeriod) {
          return mergeFrom((SharedStreetsSpeedsProto.TemporalPeriod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SharedStreetsSpeedsProto.TemporalPeriod other) {
        if (other == SharedStreetsSpeedsProto.TemporalPeriod.getDefaultInstance()) return this;
        if (other.periodSize_ != 0) {
          setPeriodSizeValue(other.getPeriodSizeValue());
        }
        if (other.getPeriodOffset() != 0L) {
          setPeriodOffset(other.getPeriodOffset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        SharedStreetsSpeedsProto.TemporalPeriod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SharedStreetsSpeedsProto.TemporalPeriod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int periodSize_ = 0;
      /**
       * <code>.PeriodSize periodSize = 1;</code>
       */
      public int getPeriodSizeValue() {
        return periodSize_;
      }
      /**
       * <code>.PeriodSize periodSize = 1;</code>
       */
      public Builder setPeriodSizeValue(int value) {
        periodSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.PeriodSize periodSize = 1;</code>
       */
      public SharedStreetsSpeedsProto.PeriodSize getPeriodSize() {
        SharedStreetsSpeedsProto.PeriodSize result = SharedStreetsSpeedsProto.PeriodSize.valueOf(periodSize_);
        return result == null ? SharedStreetsSpeedsProto.PeriodSize.UNRECOGNIZED : result;
      }
      /**
       * <code>.PeriodSize periodSize = 1;</code>
       */
      public Builder setPeriodSize(SharedStreetsSpeedsProto.PeriodSize value) {
        if (value == null) {
          throw new NullPointerException();
        }

        periodSize_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.PeriodSize periodSize = 1;</code>
       */
      public Builder clearPeriodSize() {

        periodSize_ = 0;
        onChanged();
        return this;
      }

      private long periodOffset_ ;
      /**
       * <pre>
       * period offset from unix epoch
       * </pre>
       *
       * <code>uint64 periodOffset = 2;</code>
       */
      public long getPeriodOffset() {
        return periodOffset_;
      }
      /**
       * <pre>
       * period offset from unix epoch
       * </pre>
       *
       * <code>uint64 periodOffset = 2;</code>
       */
      public Builder setPeriodOffset(long value) {

        periodOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * period offset from unix epoch
       * </pre>
       *
       * <code>uint64 periodOffset = 2;</code>
       */
      public Builder clearPeriodOffset() {

        periodOffset_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TemporalPeriod)
    }

    // @@protoc_insertion_point(class_scope:TemporalPeriod)
    private static final SharedStreetsSpeedsProto.TemporalPeriod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SharedStreetsSpeedsProto.TemporalPeriod();
    }

    public static SharedStreetsSpeedsProto.TemporalPeriod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TemporalPeriod>
            PARSER = new com.google.protobuf.AbstractParser<TemporalPeriod>() {
      public TemporalPeriod parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new TemporalPeriod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TemporalPeriod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TemporalPeriod> getParserForType() {
      return PARSER;
    }

    public SharedStreetsSpeedsProto.TemporalPeriod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WeeklyCycleOrBuilder extends
          // @@protoc_insertion_point(interface_extends:WeeklyCycle)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * date for Monday of week (Monday midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>uint32 year = 1;</code>
     */
    int getYear();

    /**
     * <code>uint32 month = 2;</code>
     */
    int getMonth();

    /**
     * <code>uint32 day = 3;</code>
     */
    int getDay();

    /**
     * <code>.PeriodSize periodSize = 4;</code>
     */
    int getPeriodSizeValue();
    /**
     * <code>.PeriodSize periodSize = 4;</code>
     */
    SharedStreetsSpeedsProto.PeriodSize getPeriodSize();
  }
  /**
   * <pre>
   * template for storing weekly cycles of events in local time -- used as a template for developing application specific data standards
   * assumes Monday-Sunday week in local time. See OpenTraffic weekly speed data for example implementation.
   * </pre>
   *
   * Protobuf type {@code WeeklyCycle}
   */
  public  static final class WeeklyCycle extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:WeeklyCycle)
          WeeklyCycleOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use WeeklyCycle.newBuilder() to construct.
    private WeeklyCycle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WeeklyCycle() {
      year_ = 0;
      month_ = 0;
      day_ = 0;
      periodSize_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WeeklyCycle(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              year_ = input.readUInt32();
              break;
            }
            case 16: {

              month_ = input.readUInt32();
              break;
            }
            case 24: {

              day_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              periodSize_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return SharedStreetsSpeedsProto.internal_static_WeeklyCycle_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return SharedStreetsSpeedsProto.internal_static_WeeklyCycle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      SharedStreetsSpeedsProto.WeeklyCycle.class, SharedStreetsSpeedsProto.WeeklyCycle.Builder.class);
    }

    public static final int YEAR_FIELD_NUMBER = 1;
    private int year_;
    /**
     * <pre>
     * date for Monday of week (Monday midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>uint32 year = 1;</code>
     */
    public int getYear() {
      return year_;
    }

    public static final int MONTH_FIELD_NUMBER = 2;
    private int month_;
    /**
     * <code>uint32 month = 2;</code>
     */
    public int getMonth() {
      return month_;
    }

    public static final int DAY_FIELD_NUMBER = 3;
    private int day_;
    /**
     * <code>uint32 day = 3;</code>
     */
    public int getDay() {
      return day_;
    }

    public static final int PERIODSIZE_FIELD_NUMBER = 4;
    private int periodSize_;
    /**
     * <code>.PeriodSize periodSize = 4;</code>
     */
    public int getPeriodSizeValue() {
      return periodSize_;
    }
    /**
     * <code>.PeriodSize periodSize = 4;</code>
     */
    public SharedStreetsSpeedsProto.PeriodSize getPeriodSize() {
      SharedStreetsSpeedsProto.PeriodSize result = SharedStreetsSpeedsProto.PeriodSize.valueOf(periodSize_);
      return result == null ? SharedStreetsSpeedsProto.PeriodSize.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (year_ != 0) {
        output.writeUInt32(1, year_);
      }
      if (month_ != 0) {
        output.writeUInt32(2, month_);
      }
      if (day_ != 0) {
        output.writeUInt32(3, day_);
      }
      if (periodSize_ != SharedStreetsSpeedsProto.PeriodSize.OneSecond.getNumber()) {
        output.writeEnum(4, periodSize_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (year_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, year_);
      }
      if (month_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(2, month_);
      }
      if (day_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(3, day_);
      }
      if (periodSize_ != SharedStreetsSpeedsProto.PeriodSize.OneSecond.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(4, periodSize_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof SharedStreetsSpeedsProto.WeeklyCycle)) {
        return super.equals(obj);
      }
      SharedStreetsSpeedsProto.WeeklyCycle other = (SharedStreetsSpeedsProto.WeeklyCycle) obj;

      boolean result = true;
      result = result && (getYear()
              == other.getYear());
      result = result && (getMonth()
              == other.getMonth());
      result = result && (getDay()
              == other.getDay());
      result = result && periodSize_ == other.periodSize_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + YEAR_FIELD_NUMBER;
      hash = (53 * hash) + getYear();
      hash = (37 * hash) + MONTH_FIELD_NUMBER;
      hash = (53 * hash) + getMonth();
      hash = (37 * hash) + DAY_FIELD_NUMBER;
      hash = (53 * hash) + getDay();
      hash = (37 * hash) + PERIODSIZE_FIELD_NUMBER;
      hash = (53 * hash) + periodSize_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SharedStreetsSpeedsProto.WeeklyCycle parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.WeeklyCycle parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.WeeklyCycle parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.WeeklyCycle parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.WeeklyCycle parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.WeeklyCycle parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.WeeklyCycle parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.WeeklyCycle parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.WeeklyCycle parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.WeeklyCycle parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.WeeklyCycle parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.WeeklyCycle parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SharedStreetsSpeedsProto.WeeklyCycle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * template for storing weekly cycles of events in local time -- used as a template for developing application specific data standards
     * assumes Monday-Sunday week in local time. See OpenTraffic weekly speed data for example implementation.
     * </pre>
     *
     * Protobuf type {@code WeeklyCycle}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:WeeklyCycle)
            SharedStreetsSpeedsProto.WeeklyCycleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SharedStreetsSpeedsProto.internal_static_WeeklyCycle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SharedStreetsSpeedsProto.internal_static_WeeklyCycle_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        SharedStreetsSpeedsProto.WeeklyCycle.class, SharedStreetsSpeedsProto.WeeklyCycle.Builder.class);
      }

      // Construct using SharedStreetsSpeedsProto.WeeklyCycle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        year_ = 0;

        month_ = 0;

        day_ = 0;

        periodSize_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return SharedStreetsSpeedsProto.internal_static_WeeklyCycle_descriptor;
      }

      public SharedStreetsSpeedsProto.WeeklyCycle getDefaultInstanceForType() {
        return SharedStreetsSpeedsProto.WeeklyCycle.getDefaultInstance();
      }

      public SharedStreetsSpeedsProto.WeeklyCycle build() {
        SharedStreetsSpeedsProto.WeeklyCycle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SharedStreetsSpeedsProto.WeeklyCycle buildPartial() {
        SharedStreetsSpeedsProto.WeeklyCycle result = new SharedStreetsSpeedsProto.WeeklyCycle(this);
        result.year_ = year_;
        result.month_ = month_;
        result.day_ = day_;
        result.periodSize_ = periodSize_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SharedStreetsSpeedsProto.WeeklyCycle) {
          return mergeFrom((SharedStreetsSpeedsProto.WeeklyCycle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SharedStreetsSpeedsProto.WeeklyCycle other) {
        if (other == SharedStreetsSpeedsProto.WeeklyCycle.getDefaultInstance()) return this;
        if (other.getYear() != 0) {
          setYear(other.getYear());
        }
        if (other.getMonth() != 0) {
          setMonth(other.getMonth());
        }
        if (other.getDay() != 0) {
          setDay(other.getDay());
        }
        if (other.periodSize_ != 0) {
          setPeriodSizeValue(other.getPeriodSizeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        SharedStreetsSpeedsProto.WeeklyCycle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SharedStreetsSpeedsProto.WeeklyCycle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int year_ ;
      /**
       * <pre>
       * date for Monday of week (Monday midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>uint32 year = 1;</code>
       */
      public int getYear() {
        return year_;
      }
      /**
       * <pre>
       * date for Monday of week (Monday midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>uint32 year = 1;</code>
       */
      public Builder setYear(int value) {

        year_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date for Monday of week (Monday midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>uint32 year = 1;</code>
       */
      public Builder clearYear() {

        year_ = 0;
        onChanged();
        return this;
      }

      private int month_ ;
      /**
       * <code>uint32 month = 2;</code>
       */
      public int getMonth() {
        return month_;
      }
      /**
       * <code>uint32 month = 2;</code>
       */
      public Builder setMonth(int value) {

        month_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 month = 2;</code>
       */
      public Builder clearMonth() {

        month_ = 0;
        onChanged();
        return this;
      }

      private int day_ ;
      /**
       * <code>uint32 day = 3;</code>
       */
      public int getDay() {
        return day_;
      }
      /**
       * <code>uint32 day = 3;</code>
       */
      public Builder setDay(int value) {

        day_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 day = 3;</code>
       */
      public Builder clearDay() {

        day_ = 0;
        onChanged();
        return this;
      }

      private int periodSize_ = 0;
      /**
       * <code>.PeriodSize periodSize = 4;</code>
       */
      public int getPeriodSizeValue() {
        return periodSize_;
      }
      /**
       * <code>.PeriodSize periodSize = 4;</code>
       */
      public Builder setPeriodSizeValue(int value) {
        periodSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.PeriodSize periodSize = 4;</code>
       */
      public SharedStreetsSpeedsProto.PeriodSize getPeriodSize() {
        SharedStreetsSpeedsProto.PeriodSize result = SharedStreetsSpeedsProto.PeriodSize.valueOf(periodSize_);
        return result == null ? SharedStreetsSpeedsProto.PeriodSize.UNRECOGNIZED : result;
      }
      /**
       * <code>.PeriodSize periodSize = 4;</code>
       */
      public Builder setPeriodSize(SharedStreetsSpeedsProto.PeriodSize value) {
        if (value == null) {
          throw new NullPointerException();
        }

        periodSize_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.PeriodSize periodSize = 4;</code>
       */
      public Builder clearPeriodSize() {

        periodSize_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:WeeklyCycle)
    }

    // @@protoc_insertion_point(class_scope:WeeklyCycle)
    private static final SharedStreetsSpeedsProto.WeeklyCycle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SharedStreetsSpeedsProto.WeeklyCycle();
    }

    public static SharedStreetsSpeedsProto.WeeklyCycle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WeeklyCycle>
            PARSER = new com.google.protobuf.AbstractParser<WeeklyCycle>() {
      public WeeklyCycle parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new WeeklyCycle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WeeklyCycle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WeeklyCycle> getParserForType() {
      return PARSER;
    }

    public SharedStreetsSpeedsProto.WeeklyCycle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpeedHistogramOrBuilder extends
          // @@protoc_insertion_point(interface_extends:SpeedHistogram)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * repeated speed bins in km/h, bins are unordered and may not be sequential
     * </pre>
     *
     * <code>repeated uint32 speedBin = 1;</code>
     */
    java.util.List<java.lang.Integer> getSpeedBinList();
    /**
     * <pre>
     * repeated speed bins in km/h, bins are unordered and may not be sequential
     * </pre>
     *
     * <code>repeated uint32 speedBin = 1;</code>
     */
    int getSpeedBinCount();
    /**
     * <pre>
     * repeated speed bins in km/h, bins are unordered and may not be sequential
     * </pre>
     *
     * <code>repeated uint32 speedBin = 1;</code>
     */
    int getSpeedBin(int index);

    /**
     * <pre>
     * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
     * </pre>
     *
     * <code>repeated uint32 observationCount = 2;</code>
     */
    java.util.List<java.lang.Integer> getObservationCountList();
    /**
     * <pre>
     * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
     * </pre>
     *
     * <code>repeated uint32 observationCount = 2;</code>
     */
    int getObservationCountCount();
    /**
     * <pre>
     * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
     * </pre>
     *
     * <code>repeated uint32 observationCount = 2;</code>
     */
    int getObservationCount(int index);
  }
  /**
   * Protobuf type {@code SpeedHistogram}
   */
  public  static final class SpeedHistogram extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:SpeedHistogram)
          SpeedHistogramOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use SpeedHistogram.newBuilder() to construct.
    private SpeedHistogram(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpeedHistogram() {
      speedBin_ = java.util.Collections.emptyList();
      observationCount_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SpeedHistogram(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                speedBin_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              speedBin_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                speedBin_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                speedBin_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                observationCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              observationCount_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                observationCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                observationCount_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          speedBin_ = java.util.Collections.unmodifiableList(speedBin_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          observationCount_ = java.util.Collections.unmodifiableList(observationCount_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return SharedStreetsSpeedsProto.internal_static_SpeedHistogram_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return SharedStreetsSpeedsProto.internal_static_SpeedHistogram_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      SharedStreetsSpeedsProto.SpeedHistogram.class, SharedStreetsSpeedsProto.SpeedHistogram.Builder.class);
    }

    public static final int SPEEDBIN_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> speedBin_;
    /**
     * <pre>
     * repeated speed bins in km/h, bins are unordered and may not be sequential
     * </pre>
     *
     * <code>repeated uint32 speedBin = 1;</code>
     */
    public java.util.List<java.lang.Integer>
    getSpeedBinList() {
      return speedBin_;
    }
    /**
     * <pre>
     * repeated speed bins in km/h, bins are unordered and may not be sequential
     * </pre>
     *
     * <code>repeated uint32 speedBin = 1;</code>
     */
    public int getSpeedBinCount() {
      return speedBin_.size();
    }
    /**
     * <pre>
     * repeated speed bins in km/h, bins are unordered and may not be sequential
     * </pre>
     *
     * <code>repeated uint32 speedBin = 1;</code>
     */
    public int getSpeedBin(int index) {
      return speedBin_.get(index);
    }
    private int speedBinMemoizedSerializedSize = -1;

    public static final int OBSERVATIONCOUNT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> observationCount_;
    /**
     * <pre>
     * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
     * </pre>
     *
     * <code>repeated uint32 observationCount = 2;</code>
     */
    public java.util.List<java.lang.Integer>
    getObservationCountList() {
      return observationCount_;
    }
    /**
     * <pre>
     * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
     * </pre>
     *
     * <code>repeated uint32 observationCount = 2;</code>
     */
    public int getObservationCountCount() {
      return observationCount_.size();
    }
    /**
     * <pre>
     * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
     * </pre>
     *
     * <code>repeated uint32 observationCount = 2;</code>
     */
    public int getObservationCount(int index) {
      return observationCount_.get(index);
    }
    private int observationCountMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (getSpeedBinList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(speedBinMemoizedSerializedSize);
      }
      for (int i = 0; i < speedBin_.size(); i++) {
        output.writeUInt32NoTag(speedBin_.get(i));
      }
      if (getObservationCountList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(observationCountMemoizedSerializedSize);
      }
      for (int i = 0; i < observationCount_.size(); i++) {
        output.writeUInt32NoTag(observationCount_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < speedBin_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt32SizeNoTag(speedBin_.get(i));
        }
        size += dataSize;
        if (!getSpeedBinList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        speedBinMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < observationCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt32SizeNoTag(observationCount_.get(i));
        }
        size += dataSize;
        if (!getObservationCountList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        observationCountMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof SharedStreetsSpeedsProto.SpeedHistogram)) {
        return super.equals(obj);
      }
      SharedStreetsSpeedsProto.SpeedHistogram other = (SharedStreetsSpeedsProto.SpeedHistogram) obj;

      boolean result = true;
      result = result && getSpeedBinList()
              .equals(other.getSpeedBinList());
      result = result && getObservationCountList()
              .equals(other.getObservationCountList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSpeedBinCount() > 0) {
        hash = (37 * hash) + SPEEDBIN_FIELD_NUMBER;
        hash = (53 * hash) + getSpeedBinList().hashCode();
      }
      if (getObservationCountCount() > 0) {
        hash = (37 * hash) + OBSERVATIONCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getObservationCountList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SharedStreetsSpeedsProto.SpeedHistogram parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogram parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogram parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogram parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogram parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogram parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogram parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogram parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogram parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogram parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogram parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogram parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SharedStreetsSpeedsProto.SpeedHistogram prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SpeedHistogram}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:SpeedHistogram)
            SharedStreetsSpeedsProto.SpeedHistogramOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SharedStreetsSpeedsProto.internal_static_SpeedHistogram_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SharedStreetsSpeedsProto.internal_static_SpeedHistogram_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        SharedStreetsSpeedsProto.SpeedHistogram.class, SharedStreetsSpeedsProto.SpeedHistogram.Builder.class);
      }

      // Construct using SharedStreetsSpeedsProto.SpeedHistogram.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        speedBin_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        observationCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return SharedStreetsSpeedsProto.internal_static_SpeedHistogram_descriptor;
      }

      public SharedStreetsSpeedsProto.SpeedHistogram getDefaultInstanceForType() {
        return SharedStreetsSpeedsProto.SpeedHistogram.getDefaultInstance();
      }

      public SharedStreetsSpeedsProto.SpeedHistogram build() {
        SharedStreetsSpeedsProto.SpeedHistogram result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SharedStreetsSpeedsProto.SpeedHistogram buildPartial() {
        SharedStreetsSpeedsProto.SpeedHistogram result = new SharedStreetsSpeedsProto.SpeedHistogram(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          speedBin_ = java.util.Collections.unmodifiableList(speedBin_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.speedBin_ = speedBin_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          observationCount_ = java.util.Collections.unmodifiableList(observationCount_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.observationCount_ = observationCount_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SharedStreetsSpeedsProto.SpeedHistogram) {
          return mergeFrom((SharedStreetsSpeedsProto.SpeedHistogram)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SharedStreetsSpeedsProto.SpeedHistogram other) {
        if (other == SharedStreetsSpeedsProto.SpeedHistogram.getDefaultInstance()) return this;
        if (!other.speedBin_.isEmpty()) {
          if (speedBin_.isEmpty()) {
            speedBin_ = other.speedBin_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSpeedBinIsMutable();
            speedBin_.addAll(other.speedBin_);
          }
          onChanged();
        }
        if (!other.observationCount_.isEmpty()) {
          if (observationCount_.isEmpty()) {
            observationCount_ = other.observationCount_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureObservationCountIsMutable();
            observationCount_.addAll(other.observationCount_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        SharedStreetsSpeedsProto.SpeedHistogram parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SharedStreetsSpeedsProto.SpeedHistogram) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> speedBin_ = java.util.Collections.emptyList();
      private void ensureSpeedBinIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          speedBin_ = new java.util.ArrayList<java.lang.Integer>(speedBin_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * repeated speed bins in km/h, bins are unordered and may not be sequential
       * </pre>
       *
       * <code>repeated uint32 speedBin = 1;</code>
       */
      public java.util.List<java.lang.Integer>
      getSpeedBinList() {
        return java.util.Collections.unmodifiableList(speedBin_);
      }
      /**
       * <pre>
       * repeated speed bins in km/h, bins are unordered and may not be sequential
       * </pre>
       *
       * <code>repeated uint32 speedBin = 1;</code>
       */
      public int getSpeedBinCount() {
        return speedBin_.size();
      }
      /**
       * <pre>
       * repeated speed bins in km/h, bins are unordered and may not be sequential
       * </pre>
       *
       * <code>repeated uint32 speedBin = 1;</code>
       */
      public int getSpeedBin(int index) {
        return speedBin_.get(index);
      }
      /**
       * <pre>
       * repeated speed bins in km/h, bins are unordered and may not be sequential
       * </pre>
       *
       * <code>repeated uint32 speedBin = 1;</code>
       */
      public Builder setSpeedBin(
              int index, int value) {
        ensureSpeedBinIsMutable();
        speedBin_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated speed bins in km/h, bins are unordered and may not be sequential
       * </pre>
       *
       * <code>repeated uint32 speedBin = 1;</code>
       */
      public Builder addSpeedBin(int value) {
        ensureSpeedBinIsMutable();
        speedBin_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated speed bins in km/h, bins are unordered and may not be sequential
       * </pre>
       *
       * <code>repeated uint32 speedBin = 1;</code>
       */
      public Builder addAllSpeedBin(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSpeedBinIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, speedBin_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated speed bins in km/h, bins are unordered and may not be sequential
       * </pre>
       *
       * <code>repeated uint32 speedBin = 1;</code>
       */
      public Builder clearSpeedBin() {
        speedBin_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> observationCount_ = java.util.Collections.emptyList();
      private void ensureObservationCountIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          observationCount_ = new java.util.ArrayList<java.lang.Integer>(observationCount_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
       * </pre>
       *
       * <code>repeated uint32 observationCount = 2;</code>
       */
      public java.util.List<java.lang.Integer>
      getObservationCountList() {
        return java.util.Collections.unmodifiableList(observationCount_);
      }
      /**
       * <pre>
       * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
       * </pre>
       *
       * <code>repeated uint32 observationCount = 2;</code>
       */
      public int getObservationCountCount() {
        return observationCount_.size();
      }
      /**
       * <pre>
       * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
       * </pre>
       *
       * <code>repeated uint32 observationCount = 2;</code>
       */
      public int getObservationCount(int index) {
        return observationCount_.get(index);
      }
      /**
       * <pre>
       * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
       * </pre>
       *
       * <code>repeated uint32 observationCount = 2;</code>
       */
      public Builder setObservationCount(
              int index, int value) {
        ensureObservationCountIsMutable();
        observationCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
       * </pre>
       *
       * <code>repeated uint32 observationCount = 2;</code>
       */
      public Builder addObservationCount(int value) {
        ensureObservationCountIsMutable();
        observationCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
       * </pre>
       *
       * <code>repeated uint32 observationCount = 2;</code>
       */
      public Builder addAllObservationCount(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureObservationCountIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, observationCount_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * number of observations for corresponding speedBin. Counts are repeated in same order as bins.
       * </pre>
       *
       * <code>repeated uint32 observationCount = 2;</code>
       */
      public Builder clearObservationCount() {
        observationCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SpeedHistogram)
    }

    // @@protoc_insertion_point(class_scope:SpeedHistogram)
    private static final SharedStreetsSpeedsProto.SpeedHistogram DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SharedStreetsSpeedsProto.SpeedHistogram();
    }

    public static SharedStreetsSpeedsProto.SpeedHistogram getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpeedHistogram>
            PARSER = new com.google.protobuf.AbstractParser<SpeedHistogram>() {
      public SpeedHistogram parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new SpeedHistogram(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpeedHistogram> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpeedHistogram> getParserForType() {
      return PARSER;
    }

    public SharedStreetsSpeedsProto.SpeedHistogram getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpeedHistogramByPeriodOrBuilder extends
          // @@protoc_insertion_point(interface_extends:SpeedHistogramByPeriod)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    java.util.List<java.lang.Integer> getPeriodOffsetList();
    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    int getPeriodOffsetCount();
    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    int getPeriodOffset(int index);

    /**
     * <pre>
     * SpeedHistogram for period
     * </pre>
     *
     * <code>repeated .SpeedHistogram histogram = 2;</code>
     */
    java.util.List<SharedStreetsSpeedsProto.SpeedHistogram>
    getHistogramList();
    /**
     * <pre>
     * SpeedHistogram for period
     * </pre>
     *
     * <code>repeated .SpeedHistogram histogram = 2;</code>
     */
    SharedStreetsSpeedsProto.SpeedHistogram getHistogram(int index);
    /**
     * <pre>
     * SpeedHistogram for period
     * </pre>
     *
     * <code>repeated .SpeedHistogram histogram = 2;</code>
     */
    int getHistogramCount();
    /**
     * <pre>
     * SpeedHistogram for period
     * </pre>
     *
     * <code>repeated .SpeedHistogram histogram = 2;</code>
     */
    java.util.List<? extends SharedStreetsSpeedsProto.SpeedHistogramOrBuilder>
    getHistogramOrBuilderList();
    /**
     * <pre>
     * SpeedHistogram for period
     * </pre>
     *
     * <code>repeated .SpeedHistogram histogram = 2;</code>
     */
    SharedStreetsSpeedsProto.SpeedHistogramOrBuilder getHistogramOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code SpeedHistogramByPeriod}
   */
  public  static final class SpeedHistogramByPeriod extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:SpeedHistogramByPeriod)
          SpeedHistogramByPeriodOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use SpeedHistogramByPeriod.newBuilder() to construct.
    private SpeedHistogramByPeriod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpeedHistogramByPeriod() {
      periodOffset_ = java.util.Collections.emptyList();
      histogram_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SpeedHistogramByPeriod(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                periodOffset_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              periodOffset_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                periodOffset_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                periodOffset_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                histogram_ = new java.util.ArrayList<SharedStreetsSpeedsProto.SpeedHistogram>();
                mutable_bitField0_ |= 0x00000002;
              }
              histogram_.add(
                      input.readMessage(SharedStreetsSpeedsProto.SpeedHistogram.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          periodOffset_ = java.util.Collections.unmodifiableList(periodOffset_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          histogram_ = java.util.Collections.unmodifiableList(histogram_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return SharedStreetsSpeedsProto.internal_static_SpeedHistogramByPeriod_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return SharedStreetsSpeedsProto.internal_static_SpeedHistogramByPeriod_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      SharedStreetsSpeedsProto.SpeedHistogramByPeriod.class, SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder.class);
    }

    public static final int PERIODOFFSET_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> periodOffset_;
    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    public java.util.List<java.lang.Integer>
    getPeriodOffsetList() {
      return periodOffset_;
    }
    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    public int getPeriodOffsetCount() {
      return periodOffset_.size();
    }
    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    public int getPeriodOffset(int index) {
      return periodOffset_.get(index);
    }
    private int periodOffsetMemoizedSerializedSize = -1;

    public static final int HISTOGRAM_FIELD_NUMBER = 2;
    private java.util.List<SharedStreetsSpeedsProto.SpeedHistogram> histogram_;
    /**
     * <pre>
     * SpeedHistogram for period
     * </pre>
     *
     * <code>repeated .SpeedHistogram histogram = 2;</code>
     */
    public java.util.List<SharedStreetsSpeedsProto.SpeedHistogram> getHistogramList() {
      return histogram_;
    }
    /**
     * <pre>
     * SpeedHistogram for period
     * </pre>
     *
     * <code>repeated .SpeedHistogram histogram = 2;</code>
     */
    public java.util.List<? extends SharedStreetsSpeedsProto.SpeedHistogramOrBuilder>
    getHistogramOrBuilderList() {
      return histogram_;
    }
    /**
     * <pre>
     * SpeedHistogram for period
     * </pre>
     *
     * <code>repeated .SpeedHistogram histogram = 2;</code>
     */
    public int getHistogramCount() {
      return histogram_.size();
    }
    /**
     * <pre>
     * SpeedHistogram for period
     * </pre>
     *
     * <code>repeated .SpeedHistogram histogram = 2;</code>
     */
    public SharedStreetsSpeedsProto.SpeedHistogram getHistogram(int index) {
      return histogram_.get(index);
    }
    /**
     * <pre>
     * SpeedHistogram for period
     * </pre>
     *
     * <code>repeated .SpeedHistogram histogram = 2;</code>
     */
    public SharedStreetsSpeedsProto.SpeedHistogramOrBuilder getHistogramOrBuilder(
            int index) {
      return histogram_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (getPeriodOffsetList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(periodOffsetMemoizedSerializedSize);
      }
      for (int i = 0; i < periodOffset_.size(); i++) {
        output.writeUInt32NoTag(periodOffset_.get(i));
      }
      for (int i = 0; i < histogram_.size(); i++) {
        output.writeMessage(2, histogram_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < periodOffset_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt32SizeNoTag(periodOffset_.get(i));
        }
        size += dataSize;
        if (!getPeriodOffsetList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        periodOffsetMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < histogram_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, histogram_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof SharedStreetsSpeedsProto.SpeedHistogramByPeriod)) {
        return super.equals(obj);
      }
      SharedStreetsSpeedsProto.SpeedHistogramByPeriod other = (SharedStreetsSpeedsProto.SpeedHistogramByPeriod) obj;

      boolean result = true;
      result = result && getPeriodOffsetList()
              .equals(other.getPeriodOffsetList());
      result = result && getHistogramList()
              .equals(other.getHistogramList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPeriodOffsetCount() > 0) {
        hash = (37 * hash) + PERIODOFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getPeriodOffsetList().hashCode();
      }
      if (getHistogramCount() > 0) {
        hash = (37 * hash) + HISTOGRAM_FIELD_NUMBER;
        hash = (53 * hash) + getHistogramList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SharedStreetsSpeedsProto.SpeedHistogramByPeriod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SpeedHistogramByPeriod}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:SpeedHistogramByPeriod)
            SharedStreetsSpeedsProto.SpeedHistogramByPeriodOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SharedStreetsSpeedsProto.internal_static_SpeedHistogramByPeriod_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SharedStreetsSpeedsProto.internal_static_SpeedHistogramByPeriod_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        SharedStreetsSpeedsProto.SpeedHistogramByPeriod.class, SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder.class);
      }

      // Construct using SharedStreetsSpeedsProto.SpeedHistogramByPeriod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getHistogramFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        periodOffset_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (histogramBuilder_ == null) {
          histogram_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          histogramBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return SharedStreetsSpeedsProto.internal_static_SpeedHistogramByPeriod_descriptor;
      }

      public SharedStreetsSpeedsProto.SpeedHistogramByPeriod getDefaultInstanceForType() {
        return SharedStreetsSpeedsProto.SpeedHistogramByPeriod.getDefaultInstance();
      }

      public SharedStreetsSpeedsProto.SpeedHistogramByPeriod build() {
        SharedStreetsSpeedsProto.SpeedHistogramByPeriod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SharedStreetsSpeedsProto.SpeedHistogramByPeriod buildPartial() {
        SharedStreetsSpeedsProto.SpeedHistogramByPeriod result = new SharedStreetsSpeedsProto.SpeedHistogramByPeriod(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          periodOffset_ = java.util.Collections.unmodifiableList(periodOffset_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.periodOffset_ = periodOffset_;
        if (histogramBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            histogram_ = java.util.Collections.unmodifiableList(histogram_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.histogram_ = histogram_;
        } else {
          result.histogram_ = histogramBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SharedStreetsSpeedsProto.SpeedHistogramByPeriod) {
          return mergeFrom((SharedStreetsSpeedsProto.SpeedHistogramByPeriod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SharedStreetsSpeedsProto.SpeedHistogramByPeriod other) {
        if (other == SharedStreetsSpeedsProto.SpeedHistogramByPeriod.getDefaultInstance()) return this;
        if (!other.periodOffset_.isEmpty()) {
          if (periodOffset_.isEmpty()) {
            periodOffset_ = other.periodOffset_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePeriodOffsetIsMutable();
            periodOffset_.addAll(other.periodOffset_);
          }
          onChanged();
        }
        if (histogramBuilder_ == null) {
          if (!other.histogram_.isEmpty()) {
            if (histogram_.isEmpty()) {
              histogram_ = other.histogram_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHistogramIsMutable();
              histogram_.addAll(other.histogram_);
            }
            onChanged();
          }
        } else {
          if (!other.histogram_.isEmpty()) {
            if (histogramBuilder_.isEmpty()) {
              histogramBuilder_.dispose();
              histogramBuilder_ = null;
              histogram_ = other.histogram_;
              bitField0_ = (bitField0_ & ~0x00000002);
              histogramBuilder_ =
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getHistogramFieldBuilder() : null;
            } else {
              histogramBuilder_.addAllMessages(other.histogram_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        SharedStreetsSpeedsProto.SpeedHistogramByPeriod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SharedStreetsSpeedsProto.SpeedHistogramByPeriod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> periodOffset_ = java.util.Collections.emptyList();
      private void ensurePeriodOffsetIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          periodOffset_ = new java.util.ArrayList<java.lang.Integer>(periodOffset_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public java.util.List<java.lang.Integer>
      getPeriodOffsetList() {
        return java.util.Collections.unmodifiableList(periodOffset_);
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public int getPeriodOffsetCount() {
        return periodOffset_.size();
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public int getPeriodOffset(int index) {
        return periodOffset_.get(index);
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public Builder setPeriodOffset(
              int index, int value) {
        ensurePeriodOffsetIsMutable();
        periodOffset_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public Builder addPeriodOffset(int value) {
        ensurePeriodOffsetIsMutable();
        periodOffset_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public Builder addAllPeriodOffset(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePeriodOffsetIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, periodOffset_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public Builder clearPeriodOffset() {
        periodOffset_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<SharedStreetsSpeedsProto.SpeedHistogram> histogram_ =
              java.util.Collections.emptyList();
      private void ensureHistogramIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          histogram_ = new java.util.ArrayList<SharedStreetsSpeedsProto.SpeedHistogram>(histogram_);
          bitField0_ |= 0x00000002;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              SharedStreetsSpeedsProto.SpeedHistogram, SharedStreetsSpeedsProto.SpeedHistogram.Builder, SharedStreetsSpeedsProto.SpeedHistogramOrBuilder> histogramBuilder_;

      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public java.util.List<SharedStreetsSpeedsProto.SpeedHistogram> getHistogramList() {
        if (histogramBuilder_ == null) {
          return java.util.Collections.unmodifiableList(histogram_);
        } else {
          return histogramBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public int getHistogramCount() {
        if (histogramBuilder_ == null) {
          return histogram_.size();
        } else {
          return histogramBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public SharedStreetsSpeedsProto.SpeedHistogram getHistogram(int index) {
        if (histogramBuilder_ == null) {
          return histogram_.get(index);
        } else {
          return histogramBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public Builder setHistogram(
              int index, SharedStreetsSpeedsProto.SpeedHistogram value) {
        if (histogramBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistogramIsMutable();
          histogram_.set(index, value);
          onChanged();
        } else {
          histogramBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public Builder setHistogram(
              int index, SharedStreetsSpeedsProto.SpeedHistogram.Builder builderForValue) {
        if (histogramBuilder_ == null) {
          ensureHistogramIsMutable();
          histogram_.set(index, builderForValue.build());
          onChanged();
        } else {
          histogramBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public Builder addHistogram(SharedStreetsSpeedsProto.SpeedHistogram value) {
        if (histogramBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistogramIsMutable();
          histogram_.add(value);
          onChanged();
        } else {
          histogramBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public Builder addHistogram(
              int index, SharedStreetsSpeedsProto.SpeedHistogram value) {
        if (histogramBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistogramIsMutable();
          histogram_.add(index, value);
          onChanged();
        } else {
          histogramBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public Builder addHistogram(
              SharedStreetsSpeedsProto.SpeedHistogram.Builder builderForValue) {
        if (histogramBuilder_ == null) {
          ensureHistogramIsMutable();
          histogram_.add(builderForValue.build());
          onChanged();
        } else {
          histogramBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public Builder addHistogram(
              int index, SharedStreetsSpeedsProto.SpeedHistogram.Builder builderForValue) {
        if (histogramBuilder_ == null) {
          ensureHistogramIsMutable();
          histogram_.add(index, builderForValue.build());
          onChanged();
        } else {
          histogramBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public Builder addAllHistogram(
              java.lang.Iterable<? extends SharedStreetsSpeedsProto.SpeedHistogram> values) {
        if (histogramBuilder_ == null) {
          ensureHistogramIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, histogram_);
          onChanged();
        } else {
          histogramBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public Builder clearHistogram() {
        if (histogramBuilder_ == null) {
          histogram_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          histogramBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public Builder removeHistogram(int index) {
        if (histogramBuilder_ == null) {
          ensureHistogramIsMutable();
          histogram_.remove(index);
          onChanged();
        } else {
          histogramBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public SharedStreetsSpeedsProto.SpeedHistogram.Builder getHistogramBuilder(
              int index) {
        return getHistogramFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public SharedStreetsSpeedsProto.SpeedHistogramOrBuilder getHistogramOrBuilder(
              int index) {
        if (histogramBuilder_ == null) {
          return histogram_.get(index);  } else {
          return histogramBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public java.util.List<? extends SharedStreetsSpeedsProto.SpeedHistogramOrBuilder>
      getHistogramOrBuilderList() {
        if (histogramBuilder_ != null) {
          return histogramBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(histogram_);
        }
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public SharedStreetsSpeedsProto.SpeedHistogram.Builder addHistogramBuilder() {
        return getHistogramFieldBuilder().addBuilder(
                SharedStreetsSpeedsProto.SpeedHistogram.getDefaultInstance());
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public SharedStreetsSpeedsProto.SpeedHistogram.Builder addHistogramBuilder(
              int index) {
        return getHistogramFieldBuilder().addBuilder(
                index, SharedStreetsSpeedsProto.SpeedHistogram.getDefaultInstance());
      }
      /**
       * <pre>
       * SpeedHistogram for period
       * </pre>
       *
       * <code>repeated .SpeedHistogram histogram = 2;</code>
       */
      public java.util.List<SharedStreetsSpeedsProto.SpeedHistogram.Builder>
      getHistogramBuilderList() {
        return getHistogramFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
              SharedStreetsSpeedsProto.SpeedHistogram, SharedStreetsSpeedsProto.SpeedHistogram.Builder, SharedStreetsSpeedsProto.SpeedHistogramOrBuilder>
      getHistogramFieldBuilder() {
        if (histogramBuilder_ == null) {
          histogramBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  SharedStreetsSpeedsProto.SpeedHistogram, SharedStreetsSpeedsProto.SpeedHistogram.Builder, SharedStreetsSpeedsProto.SpeedHistogramOrBuilder>(
                  histogram_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          histogram_ = null;
        }
        return histogramBuilder_;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SpeedHistogramByPeriod)
    }

    // @@protoc_insertion_point(class_scope:SpeedHistogramByPeriod)
    private static final SharedStreetsSpeedsProto.SpeedHistogramByPeriod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SharedStreetsSpeedsProto.SpeedHistogramByPeriod();
    }

    public static SharedStreetsSpeedsProto.SpeedHistogramByPeriod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpeedHistogramByPeriod>
            PARSER = new com.google.protobuf.AbstractParser<SpeedHistogramByPeriod>() {
      public SpeedHistogramByPeriod parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new SpeedHistogramByPeriod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpeedHistogramByPeriod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpeedHistogramByPeriod> getParserForType() {
      return PARSER;
    }

    public SharedStreetsSpeedsProto.SpeedHistogramByPeriod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpeedSummaryOrBuilder extends
          // @@protoc_insertion_point(interface_extends:SpeedSummary)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * mean speed in km/h
     * </pre>
     *
     * <code>uint32 meanSpead = 1;</code>
     */
    int getMeanSpead();

    /**
     * <pre>
     * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
     * </pre>
     *
     * <code>repeated uint32 percentile = 2;</code>
     */
    java.util.List<java.lang.Integer> getPercentileList();
    /**
     * <pre>
     * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
     * </pre>
     *
     * <code>repeated uint32 percentile = 2;</code>
     */
    int getPercentileCount();
    /**
     * <pre>
     * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
     * </pre>
     *
     * <code>repeated uint32 percentile = 2;</code>
     */
    int getPercentile(int index);

    /**
     * <pre>
     * km/h value for corresponding percentile
     * </pre>
     *
     * <code>repeated uint32 observationCount = 3;</code>
     */
    java.util.List<java.lang.Integer> getObservationCountList();
    /**
     * <pre>
     * km/h value for corresponding percentile
     * </pre>
     *
     * <code>repeated uint32 observationCount = 3;</code>
     */
    int getObservationCountCount();
    /**
     * <pre>
     * km/h value for corresponding percentile
     * </pre>
     *
     * <code>repeated uint32 observationCount = 3;</code>
     */
    int getObservationCount(int index);
  }
  /**
   * Protobuf type {@code SpeedSummary}
   */
  public  static final class SpeedSummary extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:SpeedSummary)
          SpeedSummaryOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use SpeedSummary.newBuilder() to construct.
    private SpeedSummary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpeedSummary() {
      meanSpead_ = 0;
      percentile_ = java.util.Collections.emptyList();
      observationCount_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SpeedSummary(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              meanSpead_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                percentile_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              percentile_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                percentile_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                percentile_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                observationCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              observationCount_.add(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                observationCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                observationCount_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          percentile_ = java.util.Collections.unmodifiableList(percentile_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          observationCount_ = java.util.Collections.unmodifiableList(observationCount_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return SharedStreetsSpeedsProto.internal_static_SpeedSummary_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return SharedStreetsSpeedsProto.internal_static_SpeedSummary_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      SharedStreetsSpeedsProto.SpeedSummary.class, SharedStreetsSpeedsProto.SpeedSummary.Builder.class);
    }

    private int bitField0_;
    public static final int MEANSPEAD_FIELD_NUMBER = 1;
    private int meanSpead_;
    /**
     * <pre>
     * mean speed in km/h
     * </pre>
     *
     * <code>uint32 meanSpead = 1;</code>
     */
    public int getMeanSpead() {
      return meanSpead_;
    }

    public static final int PERCENTILE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> percentile_;
    /**
     * <pre>
     * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
     * </pre>
     *
     * <code>repeated uint32 percentile = 2;</code>
     */
    public java.util.List<java.lang.Integer>
    getPercentileList() {
      return percentile_;
    }
    /**
     * <pre>
     * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
     * </pre>
     *
     * <code>repeated uint32 percentile = 2;</code>
     */
    public int getPercentileCount() {
      return percentile_.size();
    }
    /**
     * <pre>
     * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
     * </pre>
     *
     * <code>repeated uint32 percentile = 2;</code>
     */
    public int getPercentile(int index) {
      return percentile_.get(index);
    }
    private int percentileMemoizedSerializedSize = -1;

    public static final int OBSERVATIONCOUNT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> observationCount_;
    /**
     * <pre>
     * km/h value for corresponding percentile
     * </pre>
     *
     * <code>repeated uint32 observationCount = 3;</code>
     */
    public java.util.List<java.lang.Integer>
    getObservationCountList() {
      return observationCount_;
    }
    /**
     * <pre>
     * km/h value for corresponding percentile
     * </pre>
     *
     * <code>repeated uint32 observationCount = 3;</code>
     */
    public int getObservationCountCount() {
      return observationCount_.size();
    }
    /**
     * <pre>
     * km/h value for corresponding percentile
     * </pre>
     *
     * <code>repeated uint32 observationCount = 3;</code>
     */
    public int getObservationCount(int index) {
      return observationCount_.get(index);
    }
    private int observationCountMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (meanSpead_ != 0) {
        output.writeUInt32(1, meanSpead_);
      }
      if (getPercentileList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(percentileMemoizedSerializedSize);
      }
      for (int i = 0; i < percentile_.size(); i++) {
        output.writeUInt32NoTag(percentile_.get(i));
      }
      if (getObservationCountList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(observationCountMemoizedSerializedSize);
      }
      for (int i = 0; i < observationCount_.size(); i++) {
        output.writeUInt32NoTag(observationCount_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (meanSpead_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, meanSpead_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < percentile_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt32SizeNoTag(percentile_.get(i));
        }
        size += dataSize;
        if (!getPercentileList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        percentileMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < observationCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt32SizeNoTag(observationCount_.get(i));
        }
        size += dataSize;
        if (!getObservationCountList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        observationCountMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof SharedStreetsSpeedsProto.SpeedSummary)) {
        return super.equals(obj);
      }
      SharedStreetsSpeedsProto.SpeedSummary other = (SharedStreetsSpeedsProto.SpeedSummary) obj;

      boolean result = true;
      result = result && (getMeanSpead()
              == other.getMeanSpead());
      result = result && getPercentileList()
              .equals(other.getPercentileList());
      result = result && getObservationCountList()
              .equals(other.getObservationCountList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MEANSPEAD_FIELD_NUMBER;
      hash = (53 * hash) + getMeanSpead();
      if (getPercentileCount() > 0) {
        hash = (37 * hash) + PERCENTILE_FIELD_NUMBER;
        hash = (53 * hash) + getPercentileList().hashCode();
      }
      if (getObservationCountCount() > 0) {
        hash = (37 * hash) + OBSERVATIONCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getObservationCountList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SharedStreetsSpeedsProto.SpeedSummary parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedSummary parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedSummary parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedSummary parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedSummary parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedSummary parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedSummary parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedSummary parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedSummary parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedSummary parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedSummary parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedSummary parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SharedStreetsSpeedsProto.SpeedSummary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SpeedSummary}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:SpeedSummary)
            SharedStreetsSpeedsProto.SpeedSummaryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SharedStreetsSpeedsProto.internal_static_SpeedSummary_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SharedStreetsSpeedsProto.internal_static_SpeedSummary_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        SharedStreetsSpeedsProto.SpeedSummary.class, SharedStreetsSpeedsProto.SpeedSummary.Builder.class);
      }

      // Construct using SharedStreetsSpeedsProto.SpeedSummary.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        meanSpead_ = 0;

        percentile_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        observationCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return SharedStreetsSpeedsProto.internal_static_SpeedSummary_descriptor;
      }

      public SharedStreetsSpeedsProto.SpeedSummary getDefaultInstanceForType() {
        return SharedStreetsSpeedsProto.SpeedSummary.getDefaultInstance();
      }

      public SharedStreetsSpeedsProto.SpeedSummary build() {
        SharedStreetsSpeedsProto.SpeedSummary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SharedStreetsSpeedsProto.SpeedSummary buildPartial() {
        SharedStreetsSpeedsProto.SpeedSummary result = new SharedStreetsSpeedsProto.SpeedSummary(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.meanSpead_ = meanSpead_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          percentile_ = java.util.Collections.unmodifiableList(percentile_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.percentile_ = percentile_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          observationCount_ = java.util.Collections.unmodifiableList(observationCount_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.observationCount_ = observationCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SharedStreetsSpeedsProto.SpeedSummary) {
          return mergeFrom((SharedStreetsSpeedsProto.SpeedSummary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SharedStreetsSpeedsProto.SpeedSummary other) {
        if (other == SharedStreetsSpeedsProto.SpeedSummary.getDefaultInstance()) return this;
        if (other.getMeanSpead() != 0) {
          setMeanSpead(other.getMeanSpead());
        }
        if (!other.percentile_.isEmpty()) {
          if (percentile_.isEmpty()) {
            percentile_ = other.percentile_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePercentileIsMutable();
            percentile_.addAll(other.percentile_);
          }
          onChanged();
        }
        if (!other.observationCount_.isEmpty()) {
          if (observationCount_.isEmpty()) {
            observationCount_ = other.observationCount_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureObservationCountIsMutable();
            observationCount_.addAll(other.observationCount_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        SharedStreetsSpeedsProto.SpeedSummary parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SharedStreetsSpeedsProto.SpeedSummary) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int meanSpead_ ;
      /**
       * <pre>
       * mean speed in km/h
       * </pre>
       *
       * <code>uint32 meanSpead = 1;</code>
       */
      public int getMeanSpead() {
        return meanSpead_;
      }
      /**
       * <pre>
       * mean speed in km/h
       * </pre>
       *
       * <code>uint32 meanSpead = 1;</code>
       */
      public Builder setMeanSpead(int value) {

        meanSpead_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mean speed in km/h
       * </pre>
       *
       * <code>uint32 meanSpead = 1;</code>
       */
      public Builder clearMeanSpead() {

        meanSpead_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> percentile_ = java.util.Collections.emptyList();
      private void ensurePercentileIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          percentile_ = new java.util.ArrayList<java.lang.Integer>(percentile_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
       * </pre>
       *
       * <code>repeated uint32 percentile = 2;</code>
       */
      public java.util.List<java.lang.Integer>
      getPercentileList() {
        return java.util.Collections.unmodifiableList(percentile_);
      }
      /**
       * <pre>
       * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
       * </pre>
       *
       * <code>repeated uint32 percentile = 2;</code>
       */
      public int getPercentileCount() {
        return percentile_.size();
      }
      /**
       * <pre>
       * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
       * </pre>
       *
       * <code>repeated uint32 percentile = 2;</code>
       */
      public int getPercentile(int index) {
        return percentile_.get(index);
      }
      /**
       * <pre>
       * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
       * </pre>
       *
       * <code>repeated uint32 percentile = 2;</code>
       */
      public Builder setPercentile(
              int index, int value) {
        ensurePercentileIsMutable();
        percentile_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
       * </pre>
       *
       * <code>repeated uint32 percentile = 2;</code>
       */
      public Builder addPercentile(int value) {
        ensurePercentileIsMutable();
        percentile_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
       * </pre>
       *
       * <code>repeated uint32 percentile = 2;</code>
       */
      public Builder addAllPercentile(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePercentileIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, percentile_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated percentile value (e.g 50th, 85th stored as 50 or 85)
       * </pre>
       *
       * <code>repeated uint32 percentile = 2;</code>
       */
      public Builder clearPercentile() {
        percentile_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> observationCount_ = java.util.Collections.emptyList();
      private void ensureObservationCountIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          observationCount_ = new java.util.ArrayList<java.lang.Integer>(observationCount_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * km/h value for corresponding percentile
       * </pre>
       *
       * <code>repeated uint32 observationCount = 3;</code>
       */
      public java.util.List<java.lang.Integer>
      getObservationCountList() {
        return java.util.Collections.unmodifiableList(observationCount_);
      }
      /**
       * <pre>
       * km/h value for corresponding percentile
       * </pre>
       *
       * <code>repeated uint32 observationCount = 3;</code>
       */
      public int getObservationCountCount() {
        return observationCount_.size();
      }
      /**
       * <pre>
       * km/h value for corresponding percentile
       * </pre>
       *
       * <code>repeated uint32 observationCount = 3;</code>
       */
      public int getObservationCount(int index) {
        return observationCount_.get(index);
      }
      /**
       * <pre>
       * km/h value for corresponding percentile
       * </pre>
       *
       * <code>repeated uint32 observationCount = 3;</code>
       */
      public Builder setObservationCount(
              int index, int value) {
        ensureObservationCountIsMutable();
        observationCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * km/h value for corresponding percentile
       * </pre>
       *
       * <code>repeated uint32 observationCount = 3;</code>
       */
      public Builder addObservationCount(int value) {
        ensureObservationCountIsMutable();
        observationCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * km/h value for corresponding percentile
       * </pre>
       *
       * <code>repeated uint32 observationCount = 3;</code>
       */
      public Builder addAllObservationCount(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureObservationCountIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, observationCount_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * km/h value for corresponding percentile
       * </pre>
       *
       * <code>repeated uint32 observationCount = 3;</code>
       */
      public Builder clearObservationCount() {
        observationCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SpeedSummary)
    }

    // @@protoc_insertion_point(class_scope:SpeedSummary)
    private static final SharedStreetsSpeedsProto.SpeedSummary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SharedStreetsSpeedsProto.SpeedSummary();
    }

    public static SharedStreetsSpeedsProto.SpeedSummary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpeedSummary>
            PARSER = new com.google.protobuf.AbstractParser<SpeedSummary>() {
      public SpeedSummary parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new SpeedSummary(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpeedSummary> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpeedSummary> getParserForType() {
      return PARSER;
    }

    public SharedStreetsSpeedsProto.SpeedSummary getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpeedSummaryByPeriodOrBuilder extends
          // @@protoc_insertion_point(interface_extends:SpeedSummaryByPeriod)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    java.util.List<java.lang.Integer> getPeriodOffsetList();
    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    int getPeriodOffsetCount();
    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    int getPeriodOffset(int index);

    /**
     * <pre>
     * SpeedSummary for period
     * </pre>
     *
     * <code>repeated .SpeedSummary speedSummary = 3;</code>
     */
    java.util.List<SharedStreetsSpeedsProto.SpeedSummary>
    getSpeedSummaryList();
    /**
     * <pre>
     * SpeedSummary for period
     * </pre>
     *
     * <code>repeated .SpeedSummary speedSummary = 3;</code>
     */
    SharedStreetsSpeedsProto.SpeedSummary getSpeedSummary(int index);
    /**
     * <pre>
     * SpeedSummary for period
     * </pre>
     *
     * <code>repeated .SpeedSummary speedSummary = 3;</code>
     */
    int getSpeedSummaryCount();
    /**
     * <pre>
     * SpeedSummary for period
     * </pre>
     *
     * <code>repeated .SpeedSummary speedSummary = 3;</code>
     */
    java.util.List<? extends SharedStreetsSpeedsProto.SpeedSummaryOrBuilder>
    getSpeedSummaryOrBuilderList();
    /**
     * <pre>
     * SpeedSummary for period
     * </pre>
     *
     * <code>repeated .SpeedSummary speedSummary = 3;</code>
     */
    SharedStreetsSpeedsProto.SpeedSummaryOrBuilder getSpeedSummaryOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code SpeedSummaryByPeriod}
   */
  public  static final class SpeedSummaryByPeriod extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:SpeedSummaryByPeriod)
          SpeedSummaryByPeriodOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use SpeedSummaryByPeriod.newBuilder() to construct.
    private SpeedSummaryByPeriod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpeedSummaryByPeriod() {
      periodOffset_ = java.util.Collections.emptyList();
      speedSummary_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SpeedSummaryByPeriod(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                periodOffset_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              periodOffset_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                periodOffset_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                periodOffset_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                speedSummary_ = new java.util.ArrayList<SharedStreetsSpeedsProto.SpeedSummary>();
                mutable_bitField0_ |= 0x00000002;
              }
              speedSummary_.add(
                      input.readMessage(SharedStreetsSpeedsProto.SpeedSummary.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          periodOffset_ = java.util.Collections.unmodifiableList(periodOffset_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          speedSummary_ = java.util.Collections.unmodifiableList(speedSummary_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return SharedStreetsSpeedsProto.internal_static_SpeedSummaryByPeriod_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return SharedStreetsSpeedsProto.internal_static_SpeedSummaryByPeriod_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      SharedStreetsSpeedsProto.SpeedSummaryByPeriod.class, SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder.class);
    }

    public static final int PERIODOFFSET_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> periodOffset_;
    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    public java.util.List<java.lang.Integer>
    getPeriodOffsetList() {
      return periodOffset_;
    }
    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    public int getPeriodOffsetCount() {
      return periodOffset_.size();
    }
    /**
     * <pre>
     * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
     * </pre>
     *
     * <code>repeated uint32 periodOffset = 1;</code>
     */
    public int getPeriodOffset(int index) {
      return periodOffset_.get(index);
    }
    private int periodOffsetMemoizedSerializedSize = -1;

    public static final int SPEEDSUMMARY_FIELD_NUMBER = 3;
    private java.util.List<SharedStreetsSpeedsProto.SpeedSummary> speedSummary_;
    /**
     * <pre>
     * SpeedSummary for period
     * </pre>
     *
     * <code>repeated .SpeedSummary speedSummary = 3;</code>
     */
    public java.util.List<SharedStreetsSpeedsProto.SpeedSummary> getSpeedSummaryList() {
      return speedSummary_;
    }
    /**
     * <pre>
     * SpeedSummary for period
     * </pre>
     *
     * <code>repeated .SpeedSummary speedSummary = 3;</code>
     */
    public java.util.List<? extends SharedStreetsSpeedsProto.SpeedSummaryOrBuilder>
    getSpeedSummaryOrBuilderList() {
      return speedSummary_;
    }
    /**
     * <pre>
     * SpeedSummary for period
     * </pre>
     *
     * <code>repeated .SpeedSummary speedSummary = 3;</code>
     */
    public int getSpeedSummaryCount() {
      return speedSummary_.size();
    }
    /**
     * <pre>
     * SpeedSummary for period
     * </pre>
     *
     * <code>repeated .SpeedSummary speedSummary = 3;</code>
     */
    public SharedStreetsSpeedsProto.SpeedSummary getSpeedSummary(int index) {
      return speedSummary_.get(index);
    }
    /**
     * <pre>
     * SpeedSummary for period
     * </pre>
     *
     * <code>repeated .SpeedSummary speedSummary = 3;</code>
     */
    public SharedStreetsSpeedsProto.SpeedSummaryOrBuilder getSpeedSummaryOrBuilder(
            int index) {
      return speedSummary_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (getPeriodOffsetList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(periodOffsetMemoizedSerializedSize);
      }
      for (int i = 0; i < periodOffset_.size(); i++) {
        output.writeUInt32NoTag(periodOffset_.get(i));
      }
      for (int i = 0; i < speedSummary_.size(); i++) {
        output.writeMessage(3, speedSummary_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < periodOffset_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt32SizeNoTag(periodOffset_.get(i));
        }
        size += dataSize;
        if (!getPeriodOffsetList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        periodOffsetMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < speedSummary_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(3, speedSummary_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof SharedStreetsSpeedsProto.SpeedSummaryByPeriod)) {
        return super.equals(obj);
      }
      SharedStreetsSpeedsProto.SpeedSummaryByPeriod other = (SharedStreetsSpeedsProto.SpeedSummaryByPeriod) obj;

      boolean result = true;
      result = result && getPeriodOffsetList()
              .equals(other.getPeriodOffsetList());
      result = result && getSpeedSummaryList()
              .equals(other.getSpeedSummaryList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPeriodOffsetCount() > 0) {
        hash = (37 * hash) + PERIODOFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getPeriodOffsetList().hashCode();
      }
      if (getSpeedSummaryCount() > 0) {
        hash = (37 * hash) + SPEEDSUMMARY_FIELD_NUMBER;
        hash = (53 * hash) + getSpeedSummaryList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SharedStreetsSpeedsProto.SpeedSummaryByPeriod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SpeedSummaryByPeriod}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:SpeedSummaryByPeriod)
            SharedStreetsSpeedsProto.SpeedSummaryByPeriodOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SharedStreetsSpeedsProto.internal_static_SpeedSummaryByPeriod_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SharedStreetsSpeedsProto.internal_static_SpeedSummaryByPeriod_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        SharedStreetsSpeedsProto.SpeedSummaryByPeriod.class, SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder.class);
      }

      // Construct using SharedStreetsSpeedsProto.SpeedSummaryByPeriod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSpeedSummaryFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        periodOffset_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (speedSummaryBuilder_ == null) {
          speedSummary_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          speedSummaryBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return SharedStreetsSpeedsProto.internal_static_SpeedSummaryByPeriod_descriptor;
      }

      public SharedStreetsSpeedsProto.SpeedSummaryByPeriod getDefaultInstanceForType() {
        return SharedStreetsSpeedsProto.SpeedSummaryByPeriod.getDefaultInstance();
      }

      public SharedStreetsSpeedsProto.SpeedSummaryByPeriod build() {
        SharedStreetsSpeedsProto.SpeedSummaryByPeriod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SharedStreetsSpeedsProto.SpeedSummaryByPeriod buildPartial() {
        SharedStreetsSpeedsProto.SpeedSummaryByPeriod result = new SharedStreetsSpeedsProto.SpeedSummaryByPeriod(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          periodOffset_ = java.util.Collections.unmodifiableList(periodOffset_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.periodOffset_ = periodOffset_;
        if (speedSummaryBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            speedSummary_ = java.util.Collections.unmodifiableList(speedSummary_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.speedSummary_ = speedSummary_;
        } else {
          result.speedSummary_ = speedSummaryBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SharedStreetsSpeedsProto.SpeedSummaryByPeriod) {
          return mergeFrom((SharedStreetsSpeedsProto.SpeedSummaryByPeriod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SharedStreetsSpeedsProto.SpeedSummaryByPeriod other) {
        if (other == SharedStreetsSpeedsProto.SpeedSummaryByPeriod.getDefaultInstance()) return this;
        if (!other.periodOffset_.isEmpty()) {
          if (periodOffset_.isEmpty()) {
            periodOffset_ = other.periodOffset_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePeriodOffsetIsMutable();
            periodOffset_.addAll(other.periodOffset_);
          }
          onChanged();
        }
        if (speedSummaryBuilder_ == null) {
          if (!other.speedSummary_.isEmpty()) {
            if (speedSummary_.isEmpty()) {
              speedSummary_ = other.speedSummary_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSpeedSummaryIsMutable();
              speedSummary_.addAll(other.speedSummary_);
            }
            onChanged();
          }
        } else {
          if (!other.speedSummary_.isEmpty()) {
            if (speedSummaryBuilder_.isEmpty()) {
              speedSummaryBuilder_.dispose();
              speedSummaryBuilder_ = null;
              speedSummary_ = other.speedSummary_;
              bitField0_ = (bitField0_ & ~0x00000002);
              speedSummaryBuilder_ =
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getSpeedSummaryFieldBuilder() : null;
            } else {
              speedSummaryBuilder_.addAllMessages(other.speedSummary_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        SharedStreetsSpeedsProto.SpeedSummaryByPeriod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SharedStreetsSpeedsProto.SpeedSummaryByPeriod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> periodOffset_ = java.util.Collections.emptyList();
      private void ensurePeriodOffsetIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          periodOffset_ = new java.util.ArrayList<java.lang.Integer>(periodOffset_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public java.util.List<java.lang.Integer>
      getPeriodOffsetList() {
        return java.util.Collections.unmodifiableList(periodOffset_);
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public int getPeriodOffsetCount() {
        return periodOffset_.size();
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public int getPeriodOffset(int index) {
        return periodOffset_.get(index);
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public Builder setPeriodOffset(
              int index, int value) {
        ensurePeriodOffsetIsMutable();
        periodOffset_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public Builder addPeriodOffset(int value) {
        ensurePeriodOffsetIsMutable();
        periodOffset_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public Builder addAllPeriodOffset(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePeriodOffsetIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, periodOffset_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repeated offset for period (Monday, midnight is zero for week cycle per ISO-8601)
       * </pre>
       *
       * <code>repeated uint32 periodOffset = 1;</code>
       */
      public Builder clearPeriodOffset() {
        periodOffset_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<SharedStreetsSpeedsProto.SpeedSummary> speedSummary_ =
              java.util.Collections.emptyList();
      private void ensureSpeedSummaryIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          speedSummary_ = new java.util.ArrayList<SharedStreetsSpeedsProto.SpeedSummary>(speedSummary_);
          bitField0_ |= 0x00000002;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              SharedStreetsSpeedsProto.SpeedSummary, SharedStreetsSpeedsProto.SpeedSummary.Builder, SharedStreetsSpeedsProto.SpeedSummaryOrBuilder> speedSummaryBuilder_;

      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public java.util.List<SharedStreetsSpeedsProto.SpeedSummary> getSpeedSummaryList() {
        if (speedSummaryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(speedSummary_);
        } else {
          return speedSummaryBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public int getSpeedSummaryCount() {
        if (speedSummaryBuilder_ == null) {
          return speedSummary_.size();
        } else {
          return speedSummaryBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public SharedStreetsSpeedsProto.SpeedSummary getSpeedSummary(int index) {
        if (speedSummaryBuilder_ == null) {
          return speedSummary_.get(index);
        } else {
          return speedSummaryBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public Builder setSpeedSummary(
              int index, SharedStreetsSpeedsProto.SpeedSummary value) {
        if (speedSummaryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedSummaryIsMutable();
          speedSummary_.set(index, value);
          onChanged();
        } else {
          speedSummaryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public Builder setSpeedSummary(
              int index, SharedStreetsSpeedsProto.SpeedSummary.Builder builderForValue) {
        if (speedSummaryBuilder_ == null) {
          ensureSpeedSummaryIsMutable();
          speedSummary_.set(index, builderForValue.build());
          onChanged();
        } else {
          speedSummaryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public Builder addSpeedSummary(SharedStreetsSpeedsProto.SpeedSummary value) {
        if (speedSummaryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedSummaryIsMutable();
          speedSummary_.add(value);
          onChanged();
        } else {
          speedSummaryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public Builder addSpeedSummary(
              int index, SharedStreetsSpeedsProto.SpeedSummary value) {
        if (speedSummaryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedSummaryIsMutable();
          speedSummary_.add(index, value);
          onChanged();
        } else {
          speedSummaryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public Builder addSpeedSummary(
              SharedStreetsSpeedsProto.SpeedSummary.Builder builderForValue) {
        if (speedSummaryBuilder_ == null) {
          ensureSpeedSummaryIsMutable();
          speedSummary_.add(builderForValue.build());
          onChanged();
        } else {
          speedSummaryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public Builder addSpeedSummary(
              int index, SharedStreetsSpeedsProto.SpeedSummary.Builder builderForValue) {
        if (speedSummaryBuilder_ == null) {
          ensureSpeedSummaryIsMutable();
          speedSummary_.add(index, builderForValue.build());
          onChanged();
        } else {
          speedSummaryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public Builder addAllSpeedSummary(
              java.lang.Iterable<? extends SharedStreetsSpeedsProto.SpeedSummary> values) {
        if (speedSummaryBuilder_ == null) {
          ensureSpeedSummaryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, speedSummary_);
          onChanged();
        } else {
          speedSummaryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public Builder clearSpeedSummary() {
        if (speedSummaryBuilder_ == null) {
          speedSummary_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          speedSummaryBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public Builder removeSpeedSummary(int index) {
        if (speedSummaryBuilder_ == null) {
          ensureSpeedSummaryIsMutable();
          speedSummary_.remove(index);
          onChanged();
        } else {
          speedSummaryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public SharedStreetsSpeedsProto.SpeedSummary.Builder getSpeedSummaryBuilder(
              int index) {
        return getSpeedSummaryFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public SharedStreetsSpeedsProto.SpeedSummaryOrBuilder getSpeedSummaryOrBuilder(
              int index) {
        if (speedSummaryBuilder_ == null) {
          return speedSummary_.get(index);  } else {
          return speedSummaryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public java.util.List<? extends SharedStreetsSpeedsProto.SpeedSummaryOrBuilder>
      getSpeedSummaryOrBuilderList() {
        if (speedSummaryBuilder_ != null) {
          return speedSummaryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(speedSummary_);
        }
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public SharedStreetsSpeedsProto.SpeedSummary.Builder addSpeedSummaryBuilder() {
        return getSpeedSummaryFieldBuilder().addBuilder(
                SharedStreetsSpeedsProto.SpeedSummary.getDefaultInstance());
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public SharedStreetsSpeedsProto.SpeedSummary.Builder addSpeedSummaryBuilder(
              int index) {
        return getSpeedSummaryFieldBuilder().addBuilder(
                index, SharedStreetsSpeedsProto.SpeedSummary.getDefaultInstance());
      }
      /**
       * <pre>
       * SpeedSummary for period
       * </pre>
       *
       * <code>repeated .SpeedSummary speedSummary = 3;</code>
       */
      public java.util.List<SharedStreetsSpeedsProto.SpeedSummary.Builder>
      getSpeedSummaryBuilderList() {
        return getSpeedSummaryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
              SharedStreetsSpeedsProto.SpeedSummary, SharedStreetsSpeedsProto.SpeedSummary.Builder, SharedStreetsSpeedsProto.SpeedSummaryOrBuilder>
      getSpeedSummaryFieldBuilder() {
        if (speedSummaryBuilder_ == null) {
          speedSummaryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  SharedStreetsSpeedsProto.SpeedSummary, SharedStreetsSpeedsProto.SpeedSummary.Builder, SharedStreetsSpeedsProto.SpeedSummaryOrBuilder>(
                  speedSummary_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          speedSummary_ = null;
        }
        return speedSummaryBuilder_;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SpeedSummaryByPeriod)
    }

    // @@protoc_insertion_point(class_scope:SpeedSummaryByPeriod)
    private static final SharedStreetsSpeedsProto.SpeedSummaryByPeriod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SharedStreetsSpeedsProto.SpeedSummaryByPeriod();
    }

    public static SharedStreetsSpeedsProto.SpeedSummaryByPeriod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpeedSummaryByPeriod>
            PARSER = new com.google.protobuf.AbstractParser<SpeedSummaryByPeriod>() {
      public SpeedSummaryByPeriod parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new SpeedSummaryByPeriod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpeedSummaryByPeriod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpeedSummaryByPeriod> getParserForType() {
      return PARSER;
    }

    public SharedStreetsSpeedsProto.SpeedSummaryByPeriod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SharedStreetsWeeklySpeedsOrBuilder extends
          // @@protoc_insertion_point(interface_extends:SharedStreetsWeeklySpeeds)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * SharedStreets Reference ID
     * </pre>
     *
     * <code>string referenceId = 1;</code>
     */
    java.lang.String getReferenceId();
    /**
     * <pre>
     * SharedStreets Reference ID
     * </pre>
     *
     * <code>string referenceId = 1;</code>
     */
    com.google.protobuf.ByteString
    getReferenceIdBytes();

    /**
     * <pre>
     * optional (hourly if ommited)
     * </pre>
     *
     * <code>.PeriodSize periodSize = 2;</code>
     */
    int getPeriodSizeValue();
    /**
     * <pre>
     * optional (hourly if ommited)
     * </pre>
     *
     * <code>.PeriodSize periodSize = 2;</code>
     */
    SharedStreetsSpeedsProto.PeriodSize getPeriodSize();

    /**
     * <pre>
     * counts in histogram are stored as scaled numbers, otherwise stored as absolute counts
     * </pre>
     *
     * <code>bool scaledCounts = 3;</code>
     */
    boolean getScaledCounts();

    /**
     * <pre>
     * total length of SharedStreets reference in centimeters (allows users to compare expected length with actual length in internal data)
     * </pre>
     *
     * <code>uint64 referenceLength = 4;</code>
     */
    long getReferenceLength();

    /**
     * <pre>
     * number of linear bins. bin size is referenceLength / numberOfBins
     * </pre>
     *
     * <code>uint32 numberOfBins = 5;</code>
     */
    int getNumberOfBins();

    /**
     * <pre>
     * linear bin position offset (0 to n-1 bins)
     * </pre>
     *
     * <code>repeated uint32 binPosition = 6;</code>
     */
    java.util.List<java.lang.Integer> getBinPositionList();
    /**
     * <pre>
     * linear bin position offset (0 to n-1 bins)
     * </pre>
     *
     * <code>repeated uint32 binPosition = 6;</code>
     */
    int getBinPositionCount();
    /**
     * <pre>
     * linear bin position offset (0 to n-1 bins)
     * </pre>
     *
     * <code>repeated uint32 binPosition = 6;</code>
     */
    int getBinPosition(int index);

    /**
     * <pre>
     * repeated speed histogram
     * </pre>
     *
     * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
     */
    java.util.List<SharedStreetsSpeedsProto.SpeedHistogramByPeriod>
    getSpeedsByPeriodList();
    /**
     * <pre>
     * repeated speed histogram
     * </pre>
     *
     * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
     */
    SharedStreetsSpeedsProto.SpeedHistogramByPeriod getSpeedsByPeriod(int index);
    /**
     * <pre>
     * repeated speed histogram
     * </pre>
     *
     * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
     */
    int getSpeedsByPeriodCount();
    /**
     * <pre>
     * repeated speed histogram
     * </pre>
     *
     * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
     */
    java.util.List<? extends SharedStreetsSpeedsProto.SpeedHistogramByPeriodOrBuilder>
    getSpeedsByPeriodOrBuilderList();
    /**
     * <pre>
     * repeated speed histogram
     * </pre>
     *
     * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
     */
    SharedStreetsSpeedsProto.SpeedHistogramByPeriodOrBuilder getSpeedsByPeriodOrBuilder(
            int index);

    /**
     * <pre>
     * repeated speed summary
     * </pre>
     *
     * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
     */
    java.util.List<SharedStreetsSpeedsProto.SpeedSummaryByPeriod>
    getSpeedSummaryByPeriodList();
    /**
     * <pre>
     * repeated speed summary
     * </pre>
     *
     * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
     */
    SharedStreetsSpeedsProto.SpeedSummaryByPeriod getSpeedSummaryByPeriod(int index);
    /**
     * <pre>
     * repeated speed summary
     * </pre>
     *
     * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
     */
    int getSpeedSummaryByPeriodCount();
    /**
     * <pre>
     * repeated speed summary
     * </pre>
     *
     * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
     */
    java.util.List<? extends SharedStreetsSpeedsProto.SpeedSummaryByPeriodOrBuilder>
    getSpeedSummaryByPeriodOrBuilderList();
    /**
     * <pre>
     * repeated speed summary
     * </pre>
     *
     * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
     */
    SharedStreetsSpeedsProto.SpeedSummaryByPeriodOrBuilder getSpeedSummaryByPeriodOrBuilder(
            int index);
  }
  /**
   * <pre>
   * defines weekly speeds based on speed histogram and/or summary + linear binning following approach used in SharedStreetsBinnedLinearReferences
   * </pre>
   *
   * Protobuf type {@code SharedStreetsWeeklySpeeds}
   */
  public  static final class SharedStreetsWeeklySpeeds extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:SharedStreetsWeeklySpeeds)
          SharedStreetsWeeklySpeedsOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use SharedStreetsWeeklySpeeds.newBuilder() to construct.
    private SharedStreetsWeeklySpeeds(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SharedStreetsWeeklySpeeds() {
      referenceId_ = "";
      periodSize_ = 0;
      scaledCounts_ = false;
      referenceLength_ = 0L;
      numberOfBins_ = 0;
      binPosition_ = java.util.Collections.emptyList();
      speedsByPeriod_ = java.util.Collections.emptyList();
      speedSummaryByPeriod_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SharedStreetsWeeklySpeeds(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              referenceId_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              periodSize_ = rawValue;
              break;
            }
            case 24: {

              scaledCounts_ = input.readBool();
              break;
            }
            case 32: {

              referenceLength_ = input.readUInt64();
              break;
            }
            case 40: {

              numberOfBins_ = input.readUInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                binPosition_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              binPosition_.add(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                binPosition_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                binPosition_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                speedsByPeriod_ = new java.util.ArrayList<SharedStreetsSpeedsProto.SpeedHistogramByPeriod>();
                mutable_bitField0_ |= 0x00000040;
              }
              speedsByPeriod_.add(
                      input.readMessage(SharedStreetsSpeedsProto.SpeedHistogramByPeriod.parser(), extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                speedSummaryByPeriod_ = new java.util.ArrayList<SharedStreetsSpeedsProto.SpeedSummaryByPeriod>();
                mutable_bitField0_ |= 0x00000080;
              }
              speedSummaryByPeriod_.add(
                      input.readMessage(SharedStreetsSpeedsProto.SpeedSummaryByPeriod.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          binPosition_ = java.util.Collections.unmodifiableList(binPosition_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          speedsByPeriod_ = java.util.Collections.unmodifiableList(speedsByPeriod_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          speedSummaryByPeriod_ = java.util.Collections.unmodifiableList(speedSummaryByPeriod_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return SharedStreetsSpeedsProto.internal_static_SharedStreetsWeeklySpeeds_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return SharedStreetsSpeedsProto.internal_static_SharedStreetsWeeklySpeeds_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds.class, SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds.Builder.class);
    }

    private int bitField0_;
    public static final int REFERENCEID_FIELD_NUMBER = 1;
    private volatile java.lang.Object referenceId_;
    /**
     * <pre>
     * SharedStreets Reference ID
     * </pre>
     *
     * <code>string referenceId = 1;</code>
     */
    public java.lang.String getReferenceId() {
      java.lang.Object ref = referenceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * SharedStreets Reference ID
     * </pre>
     *
     * <code>string referenceId = 1;</code>
     */
    public com.google.protobuf.ByteString
    getReferenceIdBytes() {
      java.lang.Object ref = referenceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        referenceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PERIODSIZE_FIELD_NUMBER = 2;
    private int periodSize_;
    /**
     * <pre>
     * optional (hourly if ommited)
     * </pre>
     *
     * <code>.PeriodSize periodSize = 2;</code>
     */
    public int getPeriodSizeValue() {
      return periodSize_;
    }
    /**
     * <pre>
     * optional (hourly if ommited)
     * </pre>
     *
     * <code>.PeriodSize periodSize = 2;</code>
     */
    public SharedStreetsSpeedsProto.PeriodSize getPeriodSize() {
      SharedStreetsSpeedsProto.PeriodSize result = SharedStreetsSpeedsProto.PeriodSize.valueOf(periodSize_);
      return result == null ? SharedStreetsSpeedsProto.PeriodSize.UNRECOGNIZED : result;
    }

    public static final int SCALEDCOUNTS_FIELD_NUMBER = 3;
    private boolean scaledCounts_;
    /**
     * <pre>
     * counts in histogram are stored as scaled numbers, otherwise stored as absolute counts
     * </pre>
     *
     * <code>bool scaledCounts = 3;</code>
     */
    public boolean getScaledCounts() {
      return scaledCounts_;
    }

    public static final int REFERENCELENGTH_FIELD_NUMBER = 4;
    private long referenceLength_;
    /**
     * <pre>
     * total length of SharedStreets reference in centimeters (allows users to compare expected length with actual length in internal data)
     * </pre>
     *
     * <code>uint64 referenceLength = 4;</code>
     */
    public long getReferenceLength() {
      return referenceLength_;
    }

    public static final int NUMBEROFBINS_FIELD_NUMBER = 5;
    private int numberOfBins_;
    /**
     * <pre>
     * number of linear bins. bin size is referenceLength / numberOfBins
     * </pre>
     *
     * <code>uint32 numberOfBins = 5;</code>
     */
    public int getNumberOfBins() {
      return numberOfBins_;
    }

    public static final int BINPOSITION_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> binPosition_;
    /**
     * <pre>
     * linear bin position offset (0 to n-1 bins)
     * </pre>
     *
     * <code>repeated uint32 binPosition = 6;</code>
     */
    public java.util.List<java.lang.Integer>
    getBinPositionList() {
      return binPosition_;
    }
    /**
     * <pre>
     * linear bin position offset (0 to n-1 bins)
     * </pre>
     *
     * <code>repeated uint32 binPosition = 6;</code>
     */
    public int getBinPositionCount() {
      return binPosition_.size();
    }
    /**
     * <pre>
     * linear bin position offset (0 to n-1 bins)
     * </pre>
     *
     * <code>repeated uint32 binPosition = 6;</code>
     */
    public int getBinPosition(int index) {
      return binPosition_.get(index);
    }
    private int binPositionMemoizedSerializedSize = -1;

    public static final int SPEEDSBYPERIOD_FIELD_NUMBER = 7;
    private java.util.List<SharedStreetsSpeedsProto.SpeedHistogramByPeriod> speedsByPeriod_;
    /**
     * <pre>
     * repeated speed histogram
     * </pre>
     *
     * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
     */
    public java.util.List<SharedStreetsSpeedsProto.SpeedHistogramByPeriod> getSpeedsByPeriodList() {
      return speedsByPeriod_;
    }
    /**
     * <pre>
     * repeated speed histogram
     * </pre>
     *
     * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
     */
    public java.util.List<? extends SharedStreetsSpeedsProto.SpeedHistogramByPeriodOrBuilder>
    getSpeedsByPeriodOrBuilderList() {
      return speedsByPeriod_;
    }
    /**
     * <pre>
     * repeated speed histogram
     * </pre>
     *
     * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
     */
    public int getSpeedsByPeriodCount() {
      return speedsByPeriod_.size();
    }
    /**
     * <pre>
     * repeated speed histogram
     * </pre>
     *
     * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
     */
    public SharedStreetsSpeedsProto.SpeedHistogramByPeriod getSpeedsByPeriod(int index) {
      return speedsByPeriod_.get(index);
    }
    /**
     * <pre>
     * repeated speed histogram
     * </pre>
     *
     * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
     */
    public SharedStreetsSpeedsProto.SpeedHistogramByPeriodOrBuilder getSpeedsByPeriodOrBuilder(
            int index) {
      return speedsByPeriod_.get(index);
    }

    public static final int SPEEDSUMMARYBYPERIOD_FIELD_NUMBER = 8;
    private java.util.List<SharedStreetsSpeedsProto.SpeedSummaryByPeriod> speedSummaryByPeriod_;
    /**
     * <pre>
     * repeated speed summary
     * </pre>
     *
     * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
     */
    public java.util.List<SharedStreetsSpeedsProto.SpeedSummaryByPeriod> getSpeedSummaryByPeriodList() {
      return speedSummaryByPeriod_;
    }
    /**
     * <pre>
     * repeated speed summary
     * </pre>
     *
     * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
     */
    public java.util.List<? extends SharedStreetsSpeedsProto.SpeedSummaryByPeriodOrBuilder>
    getSpeedSummaryByPeriodOrBuilderList() {
      return speedSummaryByPeriod_;
    }
    /**
     * <pre>
     * repeated speed summary
     * </pre>
     *
     * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
     */
    public int getSpeedSummaryByPeriodCount() {
      return speedSummaryByPeriod_.size();
    }
    /**
     * <pre>
     * repeated speed summary
     * </pre>
     *
     * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
     */
    public SharedStreetsSpeedsProto.SpeedSummaryByPeriod getSpeedSummaryByPeriod(int index) {
      return speedSummaryByPeriod_.get(index);
    }
    /**
     * <pre>
     * repeated speed summary
     * </pre>
     *
     * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
     */
    public SharedStreetsSpeedsProto.SpeedSummaryByPeriodOrBuilder getSpeedSummaryByPeriodOrBuilder(
            int index) {
      return speedSummaryByPeriod_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (!getReferenceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, referenceId_);
      }
      if (periodSize_ != SharedStreetsSpeedsProto.PeriodSize.OneSecond.getNumber()) {
        output.writeEnum(2, periodSize_);
      }
      if (scaledCounts_ != false) {
        output.writeBool(3, scaledCounts_);
      }
      if (referenceLength_ != 0L) {
        output.writeUInt64(4, referenceLength_);
      }
      if (numberOfBins_ != 0) {
        output.writeUInt32(5, numberOfBins_);
      }
      if (getBinPositionList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(binPositionMemoizedSerializedSize);
      }
      for (int i = 0; i < binPosition_.size(); i++) {
        output.writeUInt32NoTag(binPosition_.get(i));
      }
      for (int i = 0; i < speedsByPeriod_.size(); i++) {
        output.writeMessage(7, speedsByPeriod_.get(i));
      }
      for (int i = 0; i < speedSummaryByPeriod_.size(); i++) {
        output.writeMessage(8, speedSummaryByPeriod_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getReferenceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, referenceId_);
      }
      if (periodSize_ != SharedStreetsSpeedsProto.PeriodSize.OneSecond.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(2, periodSize_);
      }
      if (scaledCounts_ != false) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(3, scaledCounts_);
      }
      if (referenceLength_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt64Size(4, referenceLength_);
      }
      if (numberOfBins_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(5, numberOfBins_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < binPosition_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt32SizeNoTag(binPosition_.get(i));
        }
        size += dataSize;
        if (!getBinPositionList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        binPositionMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < speedsByPeriod_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(7, speedsByPeriod_.get(i));
      }
      for (int i = 0; i < speedSummaryByPeriod_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(8, speedSummaryByPeriod_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds)) {
        return super.equals(obj);
      }
      SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds other = (SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds) obj;

      boolean result = true;
      result = result && getReferenceId()
              .equals(other.getReferenceId());
      result = result && periodSize_ == other.periodSize_;
      result = result && (getScaledCounts()
              == other.getScaledCounts());
      result = result && (getReferenceLength()
              == other.getReferenceLength());
      result = result && (getNumberOfBins()
              == other.getNumberOfBins());
      result = result && getBinPositionList()
              .equals(other.getBinPositionList());
      result = result && getSpeedsByPeriodList()
              .equals(other.getSpeedsByPeriodList());
      result = result && getSpeedSummaryByPeriodList()
              .equals(other.getSpeedSummaryByPeriodList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REFERENCEID_FIELD_NUMBER;
      hash = (53 * hash) + getReferenceId().hashCode();
      hash = (37 * hash) + PERIODSIZE_FIELD_NUMBER;
      hash = (53 * hash) + periodSize_;
      hash = (37 * hash) + SCALEDCOUNTS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getScaledCounts());
      hash = (37 * hash) + REFERENCELENGTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getReferenceLength());
      hash = (37 * hash) + NUMBEROFBINS_FIELD_NUMBER;
      hash = (53 * hash) + getNumberOfBins();
      if (getBinPositionCount() > 0) {
        hash = (37 * hash) + BINPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getBinPositionList().hashCode();
      }
      if (getSpeedsByPeriodCount() > 0) {
        hash = (37 * hash) + SPEEDSBYPERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getSpeedsByPeriodList().hashCode();
      }
      if (getSpeedSummaryByPeriodCount() > 0) {
        hash = (37 * hash) + SPEEDSUMMARYBYPERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getSpeedSummaryByPeriodList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * defines weekly speeds based on speed histogram and/or summary + linear binning following approach used in SharedStreetsBinnedLinearReferences
     * </pre>
     *
     * Protobuf type {@code SharedStreetsWeeklySpeeds}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:SharedStreetsWeeklySpeeds)
            SharedStreetsSpeedsProto.SharedStreetsWeeklySpeedsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return SharedStreetsSpeedsProto.internal_static_SharedStreetsWeeklySpeeds_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return SharedStreetsSpeedsProto.internal_static_SharedStreetsWeeklySpeeds_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds.class, SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds.Builder.class);
      }

      // Construct using SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSpeedsByPeriodFieldBuilder();
          getSpeedSummaryByPeriodFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        referenceId_ = "";

        periodSize_ = 0;

        scaledCounts_ = false;

        referenceLength_ = 0L;

        numberOfBins_ = 0;

        binPosition_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        if (speedsByPeriodBuilder_ == null) {
          speedsByPeriod_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          speedsByPeriodBuilder_.clear();
        }
        if (speedSummaryByPeriodBuilder_ == null) {
          speedSummaryByPeriod_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          speedSummaryByPeriodBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return SharedStreetsSpeedsProto.internal_static_SharedStreetsWeeklySpeeds_descriptor;
      }

      public SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds getDefaultInstanceForType() {
        return SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds.getDefaultInstance();
      }

      public SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds build() {
        SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds buildPartial() {
        SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds result = new SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.referenceId_ = referenceId_;
        result.periodSize_ = periodSize_;
        result.scaledCounts_ = scaledCounts_;
        result.referenceLength_ = referenceLength_;
        result.numberOfBins_ = numberOfBins_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          binPosition_ = java.util.Collections.unmodifiableList(binPosition_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.binPosition_ = binPosition_;
        if (speedsByPeriodBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            speedsByPeriod_ = java.util.Collections.unmodifiableList(speedsByPeriod_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.speedsByPeriod_ = speedsByPeriod_;
        } else {
          result.speedsByPeriod_ = speedsByPeriodBuilder_.build();
        }
        if (speedSummaryByPeriodBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            speedSummaryByPeriod_ = java.util.Collections.unmodifiableList(speedSummaryByPeriod_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.speedSummaryByPeriod_ = speedSummaryByPeriod_;
        } else {
          result.speedSummaryByPeriod_ = speedSummaryByPeriodBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds) {
          return mergeFrom((SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds other) {
        if (other == SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds.getDefaultInstance()) return this;
        if (!other.getReferenceId().isEmpty()) {
          referenceId_ = other.referenceId_;
          onChanged();
        }
        if (other.periodSize_ != 0) {
          setPeriodSizeValue(other.getPeriodSizeValue());
        }
        if (other.getScaledCounts() != false) {
          setScaledCounts(other.getScaledCounts());
        }
        if (other.getReferenceLength() != 0L) {
          setReferenceLength(other.getReferenceLength());
        }
        if (other.getNumberOfBins() != 0) {
          setNumberOfBins(other.getNumberOfBins());
        }
        if (!other.binPosition_.isEmpty()) {
          if (binPosition_.isEmpty()) {
            binPosition_ = other.binPosition_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureBinPositionIsMutable();
            binPosition_.addAll(other.binPosition_);
          }
          onChanged();
        }
        if (speedsByPeriodBuilder_ == null) {
          if (!other.speedsByPeriod_.isEmpty()) {
            if (speedsByPeriod_.isEmpty()) {
              speedsByPeriod_ = other.speedsByPeriod_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureSpeedsByPeriodIsMutable();
              speedsByPeriod_.addAll(other.speedsByPeriod_);
            }
            onChanged();
          }
        } else {
          if (!other.speedsByPeriod_.isEmpty()) {
            if (speedsByPeriodBuilder_.isEmpty()) {
              speedsByPeriodBuilder_.dispose();
              speedsByPeriodBuilder_ = null;
              speedsByPeriod_ = other.speedsByPeriod_;
              bitField0_ = (bitField0_ & ~0x00000040);
              speedsByPeriodBuilder_ =
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getSpeedsByPeriodFieldBuilder() : null;
            } else {
              speedsByPeriodBuilder_.addAllMessages(other.speedsByPeriod_);
            }
          }
        }
        if (speedSummaryByPeriodBuilder_ == null) {
          if (!other.speedSummaryByPeriod_.isEmpty()) {
            if (speedSummaryByPeriod_.isEmpty()) {
              speedSummaryByPeriod_ = other.speedSummaryByPeriod_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureSpeedSummaryByPeriodIsMutable();
              speedSummaryByPeriod_.addAll(other.speedSummaryByPeriod_);
            }
            onChanged();
          }
        } else {
          if (!other.speedSummaryByPeriod_.isEmpty()) {
            if (speedSummaryByPeriodBuilder_.isEmpty()) {
              speedSummaryByPeriodBuilder_.dispose();
              speedSummaryByPeriodBuilder_ = null;
              speedSummaryByPeriod_ = other.speedSummaryByPeriod_;
              bitField0_ = (bitField0_ & ~0x00000080);
              speedSummaryByPeriodBuilder_ =
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getSpeedSummaryByPeriodFieldBuilder() : null;
            } else {
              speedSummaryByPeriodBuilder_.addAllMessages(other.speedSummaryByPeriod_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object referenceId_ = "";
      /**
       * <pre>
       * SharedStreets Reference ID
       * </pre>
       *
       * <code>string referenceId = 1;</code>
       */
      public java.lang.String getReferenceId() {
        java.lang.Object ref = referenceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          referenceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * SharedStreets Reference ID
       * </pre>
       *
       * <code>string referenceId = 1;</code>
       */
      public com.google.protobuf.ByteString
      getReferenceIdBytes() {
        java.lang.Object ref = referenceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          referenceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * SharedStreets Reference ID
       * </pre>
       *
       * <code>string referenceId = 1;</code>
       */
      public Builder setReferenceId(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        referenceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SharedStreets Reference ID
       * </pre>
       *
       * <code>string referenceId = 1;</code>
       */
      public Builder clearReferenceId() {

        referenceId_ = getDefaultInstance().getReferenceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SharedStreets Reference ID
       * </pre>
       *
       * <code>string referenceId = 1;</code>
       */
      public Builder setReferenceIdBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        referenceId_ = value;
        onChanged();
        return this;
      }

      private int periodSize_ = 0;
      /**
       * <pre>
       * optional (hourly if ommited)
       * </pre>
       *
       * <code>.PeriodSize periodSize = 2;</code>
       */
      public int getPeriodSizeValue() {
        return periodSize_;
      }
      /**
       * <pre>
       * optional (hourly if ommited)
       * </pre>
       *
       * <code>.PeriodSize periodSize = 2;</code>
       */
      public Builder setPeriodSizeValue(int value) {
        periodSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional (hourly if ommited)
       * </pre>
       *
       * <code>.PeriodSize periodSize = 2;</code>
       */
      public SharedStreetsSpeedsProto.PeriodSize getPeriodSize() {
        SharedStreetsSpeedsProto.PeriodSize result = SharedStreetsSpeedsProto.PeriodSize.valueOf(periodSize_);
        return result == null ? SharedStreetsSpeedsProto.PeriodSize.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * optional (hourly if ommited)
       * </pre>
       *
       * <code>.PeriodSize periodSize = 2;</code>
       */
      public Builder setPeriodSize(SharedStreetsSpeedsProto.PeriodSize value) {
        if (value == null) {
          throw new NullPointerException();
        }

        periodSize_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional (hourly if ommited)
       * </pre>
       *
       * <code>.PeriodSize periodSize = 2;</code>
       */
      public Builder clearPeriodSize() {

        periodSize_ = 0;
        onChanged();
        return this;
      }

      private boolean scaledCounts_ ;
      /**
       * <pre>
       * counts in histogram are stored as scaled numbers, otherwise stored as absolute counts
       * </pre>
       *
       * <code>bool scaledCounts = 3;</code>
       */
      public boolean getScaledCounts() {
        return scaledCounts_;
      }
      /**
       * <pre>
       * counts in histogram are stored as scaled numbers, otherwise stored as absolute counts
       * </pre>
       *
       * <code>bool scaledCounts = 3;</code>
       */
      public Builder setScaledCounts(boolean value) {

        scaledCounts_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * counts in histogram are stored as scaled numbers, otherwise stored as absolute counts
       * </pre>
       *
       * <code>bool scaledCounts = 3;</code>
       */
      public Builder clearScaledCounts() {

        scaledCounts_ = false;
        onChanged();
        return this;
      }

      private long referenceLength_ ;
      /**
       * <pre>
       * total length of SharedStreets reference in centimeters (allows users to compare expected length with actual length in internal data)
       * </pre>
       *
       * <code>uint64 referenceLength = 4;</code>
       */
      public long getReferenceLength() {
        return referenceLength_;
      }
      /**
       * <pre>
       * total length of SharedStreets reference in centimeters (allows users to compare expected length with actual length in internal data)
       * </pre>
       *
       * <code>uint64 referenceLength = 4;</code>
       */
      public Builder setReferenceLength(long value) {

        referenceLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * total length of SharedStreets reference in centimeters (allows users to compare expected length with actual length in internal data)
       * </pre>
       *
       * <code>uint64 referenceLength = 4;</code>
       */
      public Builder clearReferenceLength() {

        referenceLength_ = 0L;
        onChanged();
        return this;
      }

      private int numberOfBins_ ;
      /**
       * <pre>
       * number of linear bins. bin size is referenceLength / numberOfBins
       * </pre>
       *
       * <code>uint32 numberOfBins = 5;</code>
       */
      public int getNumberOfBins() {
        return numberOfBins_;
      }
      /**
       * <pre>
       * number of linear bins. bin size is referenceLength / numberOfBins
       * </pre>
       *
       * <code>uint32 numberOfBins = 5;</code>
       */
      public Builder setNumberOfBins(int value) {

        numberOfBins_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * number of linear bins. bin size is referenceLength / numberOfBins
       * </pre>
       *
       * <code>uint32 numberOfBins = 5;</code>
       */
      public Builder clearNumberOfBins() {

        numberOfBins_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> binPosition_ = java.util.Collections.emptyList();
      private void ensureBinPositionIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          binPosition_ = new java.util.ArrayList<java.lang.Integer>(binPosition_);
          bitField0_ |= 0x00000020;
        }
      }
      /**
       * <pre>
       * linear bin position offset (0 to n-1 bins)
       * </pre>
       *
       * <code>repeated uint32 binPosition = 6;</code>
       */
      public java.util.List<java.lang.Integer>
      getBinPositionList() {
        return java.util.Collections.unmodifiableList(binPosition_);
      }
      /**
       * <pre>
       * linear bin position offset (0 to n-1 bins)
       * </pre>
       *
       * <code>repeated uint32 binPosition = 6;</code>
       */
      public int getBinPositionCount() {
        return binPosition_.size();
      }
      /**
       * <pre>
       * linear bin position offset (0 to n-1 bins)
       * </pre>
       *
       * <code>repeated uint32 binPosition = 6;</code>
       */
      public int getBinPosition(int index) {
        return binPosition_.get(index);
      }
      /**
       * <pre>
       * linear bin position offset (0 to n-1 bins)
       * </pre>
       *
       * <code>repeated uint32 binPosition = 6;</code>
       */
      public Builder setBinPosition(
              int index, int value) {
        ensureBinPositionIsMutable();
        binPosition_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * linear bin position offset (0 to n-1 bins)
       * </pre>
       *
       * <code>repeated uint32 binPosition = 6;</code>
       */
      public Builder addBinPosition(int value) {
        ensureBinPositionIsMutable();
        binPosition_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * linear bin position offset (0 to n-1 bins)
       * </pre>
       *
       * <code>repeated uint32 binPosition = 6;</code>
       */
      public Builder addAllBinPosition(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBinPositionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, binPosition_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * linear bin position offset (0 to n-1 bins)
       * </pre>
       *
       * <code>repeated uint32 binPosition = 6;</code>
       */
      public Builder clearBinPosition() {
        binPosition_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<SharedStreetsSpeedsProto.SpeedHistogramByPeriod> speedsByPeriod_ =
              java.util.Collections.emptyList();
      private void ensureSpeedsByPeriodIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          speedsByPeriod_ = new java.util.ArrayList<SharedStreetsSpeedsProto.SpeedHistogramByPeriod>(speedsByPeriod_);
          bitField0_ |= 0x00000040;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              SharedStreetsSpeedsProto.SpeedHistogramByPeriod, SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder, SharedStreetsSpeedsProto.SpeedHistogramByPeriodOrBuilder> speedsByPeriodBuilder_;

      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public java.util.List<SharedStreetsSpeedsProto.SpeedHistogramByPeriod> getSpeedsByPeriodList() {
        if (speedsByPeriodBuilder_ == null) {
          return java.util.Collections.unmodifiableList(speedsByPeriod_);
        } else {
          return speedsByPeriodBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public int getSpeedsByPeriodCount() {
        if (speedsByPeriodBuilder_ == null) {
          return speedsByPeriod_.size();
        } else {
          return speedsByPeriodBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public SharedStreetsSpeedsProto.SpeedHistogramByPeriod getSpeedsByPeriod(int index) {
        if (speedsByPeriodBuilder_ == null) {
          return speedsByPeriod_.get(index);
        } else {
          return speedsByPeriodBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public Builder setSpeedsByPeriod(
              int index, SharedStreetsSpeedsProto.SpeedHistogramByPeriod value) {
        if (speedsByPeriodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedsByPeriodIsMutable();
          speedsByPeriod_.set(index, value);
          onChanged();
        } else {
          speedsByPeriodBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public Builder setSpeedsByPeriod(
              int index, SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder builderForValue) {
        if (speedsByPeriodBuilder_ == null) {
          ensureSpeedsByPeriodIsMutable();
          speedsByPeriod_.set(index, builderForValue.build());
          onChanged();
        } else {
          speedsByPeriodBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public Builder addSpeedsByPeriod(SharedStreetsSpeedsProto.SpeedHistogramByPeriod value) {
        if (speedsByPeriodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedsByPeriodIsMutable();
          speedsByPeriod_.add(value);
          onChanged();
        } else {
          speedsByPeriodBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public Builder addSpeedsByPeriod(
              int index, SharedStreetsSpeedsProto.SpeedHistogramByPeriod value) {
        if (speedsByPeriodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedsByPeriodIsMutable();
          speedsByPeriod_.add(index, value);
          onChanged();
        } else {
          speedsByPeriodBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public Builder addSpeedsByPeriod(
              SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder builderForValue) {
        if (speedsByPeriodBuilder_ == null) {
          ensureSpeedsByPeriodIsMutable();
          speedsByPeriod_.add(builderForValue.build());
          onChanged();
        } else {
          speedsByPeriodBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public Builder addSpeedsByPeriod(
              int index, SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder builderForValue) {
        if (speedsByPeriodBuilder_ == null) {
          ensureSpeedsByPeriodIsMutable();
          speedsByPeriod_.add(index, builderForValue.build());
          onChanged();
        } else {
          speedsByPeriodBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public Builder addAllSpeedsByPeriod(
              java.lang.Iterable<? extends SharedStreetsSpeedsProto.SpeedHistogramByPeriod> values) {
        if (speedsByPeriodBuilder_ == null) {
          ensureSpeedsByPeriodIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, speedsByPeriod_);
          onChanged();
        } else {
          speedsByPeriodBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public Builder clearSpeedsByPeriod() {
        if (speedsByPeriodBuilder_ == null) {
          speedsByPeriod_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          speedsByPeriodBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public Builder removeSpeedsByPeriod(int index) {
        if (speedsByPeriodBuilder_ == null) {
          ensureSpeedsByPeriodIsMutable();
          speedsByPeriod_.remove(index);
          onChanged();
        } else {
          speedsByPeriodBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder getSpeedsByPeriodBuilder(
              int index) {
        return getSpeedsByPeriodFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public SharedStreetsSpeedsProto.SpeedHistogramByPeriodOrBuilder getSpeedsByPeriodOrBuilder(
              int index) {
        if (speedsByPeriodBuilder_ == null) {
          return speedsByPeriod_.get(index);  } else {
          return speedsByPeriodBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public java.util.List<? extends SharedStreetsSpeedsProto.SpeedHistogramByPeriodOrBuilder>
      getSpeedsByPeriodOrBuilderList() {
        if (speedsByPeriodBuilder_ != null) {
          return speedsByPeriodBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(speedsByPeriod_);
        }
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder addSpeedsByPeriodBuilder() {
        return getSpeedsByPeriodFieldBuilder().addBuilder(
                SharedStreetsSpeedsProto.SpeedHistogramByPeriod.getDefaultInstance());
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder addSpeedsByPeriodBuilder(
              int index) {
        return getSpeedsByPeriodFieldBuilder().addBuilder(
                index, SharedStreetsSpeedsProto.SpeedHistogramByPeriod.getDefaultInstance());
      }
      /**
       * <pre>
       * repeated speed histogram
       * </pre>
       *
       * <code>repeated .SpeedHistogramByPeriod speedsByPeriod = 7;</code>
       */
      public java.util.List<SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder>
      getSpeedsByPeriodBuilderList() {
        return getSpeedsByPeriodFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
              SharedStreetsSpeedsProto.SpeedHistogramByPeriod, SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder, SharedStreetsSpeedsProto.SpeedHistogramByPeriodOrBuilder>
      getSpeedsByPeriodFieldBuilder() {
        if (speedsByPeriodBuilder_ == null) {
          speedsByPeriodBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  SharedStreetsSpeedsProto.SpeedHistogramByPeriod, SharedStreetsSpeedsProto.SpeedHistogramByPeriod.Builder, SharedStreetsSpeedsProto.SpeedHistogramByPeriodOrBuilder>(
                  speedsByPeriod_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          speedsByPeriod_ = null;
        }
        return speedsByPeriodBuilder_;
      }

      private java.util.List<SharedStreetsSpeedsProto.SpeedSummaryByPeriod> speedSummaryByPeriod_ =
              java.util.Collections.emptyList();
      private void ensureSpeedSummaryByPeriodIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          speedSummaryByPeriod_ = new java.util.ArrayList<SharedStreetsSpeedsProto.SpeedSummaryByPeriod>(speedSummaryByPeriod_);
          bitField0_ |= 0x00000080;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              SharedStreetsSpeedsProto.SpeedSummaryByPeriod, SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder, SharedStreetsSpeedsProto.SpeedSummaryByPeriodOrBuilder> speedSummaryByPeriodBuilder_;

      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public java.util.List<SharedStreetsSpeedsProto.SpeedSummaryByPeriod> getSpeedSummaryByPeriodList() {
        if (speedSummaryByPeriodBuilder_ == null) {
          return java.util.Collections.unmodifiableList(speedSummaryByPeriod_);
        } else {
          return speedSummaryByPeriodBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public int getSpeedSummaryByPeriodCount() {
        if (speedSummaryByPeriodBuilder_ == null) {
          return speedSummaryByPeriod_.size();
        } else {
          return speedSummaryByPeriodBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public SharedStreetsSpeedsProto.SpeedSummaryByPeriod getSpeedSummaryByPeriod(int index) {
        if (speedSummaryByPeriodBuilder_ == null) {
          return speedSummaryByPeriod_.get(index);
        } else {
          return speedSummaryByPeriodBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public Builder setSpeedSummaryByPeriod(
              int index, SharedStreetsSpeedsProto.SpeedSummaryByPeriod value) {
        if (speedSummaryByPeriodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedSummaryByPeriodIsMutable();
          speedSummaryByPeriod_.set(index, value);
          onChanged();
        } else {
          speedSummaryByPeriodBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public Builder setSpeedSummaryByPeriod(
              int index, SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder builderForValue) {
        if (speedSummaryByPeriodBuilder_ == null) {
          ensureSpeedSummaryByPeriodIsMutable();
          speedSummaryByPeriod_.set(index, builderForValue.build());
          onChanged();
        } else {
          speedSummaryByPeriodBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public Builder addSpeedSummaryByPeriod(SharedStreetsSpeedsProto.SpeedSummaryByPeriod value) {
        if (speedSummaryByPeriodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedSummaryByPeriodIsMutable();
          speedSummaryByPeriod_.add(value);
          onChanged();
        } else {
          speedSummaryByPeriodBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public Builder addSpeedSummaryByPeriod(
              int index, SharedStreetsSpeedsProto.SpeedSummaryByPeriod value) {
        if (speedSummaryByPeriodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedSummaryByPeriodIsMutable();
          speedSummaryByPeriod_.add(index, value);
          onChanged();
        } else {
          speedSummaryByPeriodBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public Builder addSpeedSummaryByPeriod(
              SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder builderForValue) {
        if (speedSummaryByPeriodBuilder_ == null) {
          ensureSpeedSummaryByPeriodIsMutable();
          speedSummaryByPeriod_.add(builderForValue.build());
          onChanged();
        } else {
          speedSummaryByPeriodBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public Builder addSpeedSummaryByPeriod(
              int index, SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder builderForValue) {
        if (speedSummaryByPeriodBuilder_ == null) {
          ensureSpeedSummaryByPeriodIsMutable();
          speedSummaryByPeriod_.add(index, builderForValue.build());
          onChanged();
        } else {
          speedSummaryByPeriodBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public Builder addAllSpeedSummaryByPeriod(
              java.lang.Iterable<? extends SharedStreetsSpeedsProto.SpeedSummaryByPeriod> values) {
        if (speedSummaryByPeriodBuilder_ == null) {
          ensureSpeedSummaryByPeriodIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, speedSummaryByPeriod_);
          onChanged();
        } else {
          speedSummaryByPeriodBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public Builder clearSpeedSummaryByPeriod() {
        if (speedSummaryByPeriodBuilder_ == null) {
          speedSummaryByPeriod_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          speedSummaryByPeriodBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public Builder removeSpeedSummaryByPeriod(int index) {
        if (speedSummaryByPeriodBuilder_ == null) {
          ensureSpeedSummaryByPeriodIsMutable();
          speedSummaryByPeriod_.remove(index);
          onChanged();
        } else {
          speedSummaryByPeriodBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder getSpeedSummaryByPeriodBuilder(
              int index) {
        return getSpeedSummaryByPeriodFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public SharedStreetsSpeedsProto.SpeedSummaryByPeriodOrBuilder getSpeedSummaryByPeriodOrBuilder(
              int index) {
        if (speedSummaryByPeriodBuilder_ == null) {
          return speedSummaryByPeriod_.get(index);  } else {
          return speedSummaryByPeriodBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public java.util.List<? extends SharedStreetsSpeedsProto.SpeedSummaryByPeriodOrBuilder>
      getSpeedSummaryByPeriodOrBuilderList() {
        if (speedSummaryByPeriodBuilder_ != null) {
          return speedSummaryByPeriodBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(speedSummaryByPeriod_);
        }
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder addSpeedSummaryByPeriodBuilder() {
        return getSpeedSummaryByPeriodFieldBuilder().addBuilder(
                SharedStreetsSpeedsProto.SpeedSummaryByPeriod.getDefaultInstance());
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder addSpeedSummaryByPeriodBuilder(
              int index) {
        return getSpeedSummaryByPeriodFieldBuilder().addBuilder(
                index, SharedStreetsSpeedsProto.SpeedSummaryByPeriod.getDefaultInstance());
      }
      /**
       * <pre>
       * repeated speed summary
       * </pre>
       *
       * <code>repeated .SpeedSummaryByPeriod speedSummaryByPeriod = 8;</code>
       */
      public java.util.List<SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder>
      getSpeedSummaryByPeriodBuilderList() {
        return getSpeedSummaryByPeriodFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
              SharedStreetsSpeedsProto.SpeedSummaryByPeriod, SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder, SharedStreetsSpeedsProto.SpeedSummaryByPeriodOrBuilder>
      getSpeedSummaryByPeriodFieldBuilder() {
        if (speedSummaryByPeriodBuilder_ == null) {
          speedSummaryByPeriodBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  SharedStreetsSpeedsProto.SpeedSummaryByPeriod, SharedStreetsSpeedsProto.SpeedSummaryByPeriod.Builder, SharedStreetsSpeedsProto.SpeedSummaryByPeriodOrBuilder>(
                  speedSummaryByPeriod_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          speedSummaryByPeriod_ = null;
        }
        return speedSummaryByPeriodBuilder_;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SharedStreetsWeeklySpeeds)
    }

    // @@protoc_insertion_point(class_scope:SharedStreetsWeeklySpeeds)
    private static final SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds();
    }

    public static SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SharedStreetsWeeklySpeeds>
            PARSER = new com.google.protobuf.AbstractParser<SharedStreetsWeeklySpeeds>() {
      public SharedStreetsWeeklySpeeds parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new SharedStreetsWeeklySpeeds(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SharedStreetsWeeklySpeeds> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SharedStreetsWeeklySpeeds> getParserForType() {
      return PARSER;
    }

    public SharedStreetsSpeedsProto.SharedStreetsWeeklySpeeds getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_TemporalPeriod_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_TemporalPeriod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_WeeklyCycle_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_WeeklyCycle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_SpeedHistogram_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_SpeedHistogram_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_SpeedHistogramByPeriod_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_SpeedHistogramByPeriod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_SpeedSummary_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_SpeedSummary_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_SpeedSummaryByPeriod_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_SpeedSummaryByPeriod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_SharedStreetsWeeklySpeeds_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_SharedStreetsWeeklySpeeds_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
          descriptor;
  static {
    java.lang.String[] descriptorData = {
            "\n\014speeds.proto\"G\n\016TemporalPeriod\022\037\n\nperi" +
                    "odSize\030\001 \001(\0162\013.PeriodSize\022\024\n\014periodOffse" +
                    "t\030\002 \001(\004\"X\n\013WeeklyCycle\022\014\n\004year\030\001 \001(\r\022\r\n\005" +
                    "month\030\002 \001(\r\022\013\n\003day\030\003 \001(\r\022\037\n\nperiodSize\030\004" +
                    " \001(\0162\013.PeriodSize\"<\n\016SpeedHistogram\022\020\n\010s" +
                    "peedBin\030\001 \003(\r\022\030\n\020observationCount\030\002 \003(\r\"" +
                    "R\n\026SpeedHistogramByPeriod\022\024\n\014periodOffse" +
                    "t\030\001 \003(\r\022\"\n\thistogram\030\002 \003(\0132\017.SpeedHistog" +
                    "ram\"O\n\014SpeedSummary\022\021\n\tmeanSpead\030\001 \001(\r\022\022" +
                    "\n\npercentile\030\002 \003(\r\022\030\n\020observationCount\030\003",
            " \003(\r\"Q\n\024SpeedSummaryByPeriod\022\024\n\014periodOf" +
                    "fset\030\001 \003(\r\022#\n\014speedSummary\030\003 \003(\0132\r.Speed" +
                    "Summary\"\221\002\n\031SharedStreetsWeeklySpeeds\022\023\n" +
                    "\013referenceId\030\001 \001(\t\022\037\n\nperiodSize\030\002 \001(\0162\013" +
                    ".PeriodSize\022\024\n\014scaledCounts\030\003 \001(\010\022\027\n\017ref" +
                    "erenceLength\030\004 \001(\004\022\024\n\014numberOfBins\030\005 \001(\r" +
                    "\022\023\n\013binPosition\030\006 \003(\r\022/\n\016speedsByPeriod\030" +
                    "\007 \003(\0132\027.SpeedHistogramByPeriod\0223\n\024speedS" +
                    "ummaryByPeriod\030\010 \003(\0132\025.SpeedSummaryByPer" +
                    "iod*\373\001\n\nPeriodSize\022\r\n\tOneSecond\020\000\022\017\n\013Fiv",
            "eSeconds\020\001\022\016\n\nTenSeconds\020\002\022\022\n\016FifteenSec" +
                    "onds\020\003\022\021\n\rThirtySeconds\020\004\022\r\n\tOneMinute\020\005" +
                    "\022\017\n\013FiveMinutes\020\006\022\016\n\nTenMinutes\020\007\022\022\n\016Fif" +
                    "teenMinutes\020\010\022\021\n\rThirtyMinutes\020\t\022\013\n\007OneH" +
                    "our\020\n\022\n\n\006OneDay\020\013\022\013\n\007OneWeek\020\014\022\014\n\010OneMon" +
                    "th\020\r\022\013\n\007OneYear\020\016B\032B\030SharedStreetsSpeeds" +
                    "Protob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
              public com.google.protobuf.ExtensionRegistry assignDescriptors(
                      com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
              }
            };
    com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new com.google.protobuf.Descriptors.FileDescriptor[] {
                    }, assigner);
    internal_static_TemporalPeriod_descriptor =
            getDescriptor().getMessageTypes().get(0);
    internal_static_TemporalPeriod_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_TemporalPeriod_descriptor,
            new java.lang.String[] { "PeriodSize", "PeriodOffset", });
    internal_static_WeeklyCycle_descriptor =
            getDescriptor().getMessageTypes().get(1);
    internal_static_WeeklyCycle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_WeeklyCycle_descriptor,
            new java.lang.String[] { "Year", "Month", "Day", "PeriodSize", });
    internal_static_SpeedHistogram_descriptor =
            getDescriptor().getMessageTypes().get(2);
    internal_static_SpeedHistogram_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_SpeedHistogram_descriptor,
            new java.lang.String[] { "SpeedBin", "ObservationCount", });
    internal_static_SpeedHistogramByPeriod_descriptor =
            getDescriptor().getMessageTypes().get(3);
    internal_static_SpeedHistogramByPeriod_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_SpeedHistogramByPeriod_descriptor,
            new java.lang.String[] { "PeriodOffset", "Histogram", });
    internal_static_SpeedSummary_descriptor =
            getDescriptor().getMessageTypes().get(4);
    internal_static_SpeedSummary_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_SpeedSummary_descriptor,
            new java.lang.String[] { "MeanSpead", "Percentile", "ObservationCount", });
    internal_static_SpeedSummaryByPeriod_descriptor =
            getDescriptor().getMessageTypes().get(5);
    internal_static_SpeedSummaryByPeriod_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_SpeedSummaryByPeriod_descriptor,
            new java.lang.String[] { "PeriodOffset", "SpeedSummary", });
    internal_static_SharedStreetsWeeklySpeeds_descriptor =
            getDescriptor().getMessageTypes().get(6);
    internal_static_SharedStreetsWeeklySpeeds_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_SharedStreetsWeeklySpeeds_descriptor,
            new java.lang.String[] { "ReferenceId", "PeriodSize", "ScaledCounts", "ReferenceLength", "NumberOfBins", "BinPosition", "SpeedsByPeriod", "SpeedSummaryByPeriod", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
