// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dust.proto

public final class Dust {
  private Dust() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MapDustTraceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MapDustTrace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string endId = 1;</code>
     */
    java.lang.String getEndId();
    /**
     * <code>string endId = 1;</code>
     */
    com.google.protobuf.ByteString
        getEndIdBytes();

    /**
     * <code>repeated double startFraction = 2;</code>
     */
    java.util.List<java.lang.Double> getStartFractionList();
    /**
     * <code>repeated double startFraction = 2;</code>
     */
    int getStartFractionCount();
    /**
     * <code>repeated double startFraction = 2;</code>
     */
    double getStartFraction(int index);

    /**
     * <code>repeated double endFraction = 3;</code>
     */
    java.util.List<java.lang.Double> getEndFractionList();
    /**
     * <code>repeated double endFraction = 3;</code>
     */
    int getEndFractionCount();
    /**
     * <code>repeated double endFraction = 3;</code>
     */
    double getEndFraction(int index);

    /**
     * <code>repeated double lonlats = 4;</code>
     */
    java.util.List<java.lang.Double> getLonlatsList();
    /**
     * <code>repeated double lonlats = 4;</code>
     */
    int getLonlatsCount();
    /**
     * <code>repeated double lonlats = 4;</code>
     */
    double getLonlats(int index);
  }
  /**
   * Protobuf type {@code MapDustTrace}
   */
  public  static final class MapDustTrace extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MapDustTrace)
      MapDustTraceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MapDustTrace.newBuilder() to construct.
    private MapDustTrace(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MapDustTrace() {
      endId_ = "";
      startFraction_ = java.util.Collections.emptyList();
      endFraction_ = java.util.Collections.emptyList();
      lonlats_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MapDustTrace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              endId_ = s;
              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                startFraction_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              startFraction_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                startFraction_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                startFraction_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                endFraction_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              endFraction_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                endFraction_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                endFraction_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 33: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                lonlats_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              lonlats_.add(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                lonlats_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                lonlats_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          startFraction_ = java.util.Collections.unmodifiableList(startFraction_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          endFraction_ = java.util.Collections.unmodifiableList(endFraction_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          lonlats_ = java.util.Collections.unmodifiableList(lonlats_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Dust.internal_static_MapDustTrace_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Dust.internal_static_MapDustTrace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Dust.MapDustTrace.class, Dust.MapDustTrace.Builder.class);
    }

    private int bitField0_;
    public static final int ENDID_FIELD_NUMBER = 1;
    private volatile java.lang.Object endId_;
    /**
     * <code>string endId = 1;</code>
     */
    public java.lang.String getEndId() {
      java.lang.Object ref = endId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        endId_ = s;
        return s;
      }
    }
    /**
     * <code>string endId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getEndIdBytes() {
      java.lang.Object ref = endId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        endId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STARTFRACTION_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> startFraction_;
    /**
     * <code>repeated double startFraction = 2;</code>
     */
    public java.util.List<java.lang.Double>
        getStartFractionList() {
      return startFraction_;
    }
    /**
     * <code>repeated double startFraction = 2;</code>
     */
    public int getStartFractionCount() {
      return startFraction_.size();
    }
    /**
     * <code>repeated double startFraction = 2;</code>
     */
    public double getStartFraction(int index) {
      return startFraction_.get(index);
    }
    private int startFractionMemoizedSerializedSize = -1;

    public static final int ENDFRACTION_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> endFraction_;
    /**
     * <code>repeated double endFraction = 3;</code>
     */
    public java.util.List<java.lang.Double>
        getEndFractionList() {
      return endFraction_;
    }
    /**
     * <code>repeated double endFraction = 3;</code>
     */
    public int getEndFractionCount() {
      return endFraction_.size();
    }
    /**
     * <code>repeated double endFraction = 3;</code>
     */
    public double getEndFraction(int index) {
      return endFraction_.get(index);
    }
    private int endFractionMemoizedSerializedSize = -1;

    public static final int LONLATS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Double> lonlats_;
    /**
     * <code>repeated double lonlats = 4;</code>
     */
    public java.util.List<java.lang.Double>
        getLonlatsList() {
      return lonlats_;
    }
    /**
     * <code>repeated double lonlats = 4;</code>
     */
    public int getLonlatsCount() {
      return lonlats_.size();
    }
    /**
     * <code>repeated double lonlats = 4;</code>
     */
    public double getLonlats(int index) {
      return lonlats_.get(index);
    }
    private int lonlatsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getEndIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, endId_);
      }
      if (getStartFractionList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(startFractionMemoizedSerializedSize);
      }
      for (int i = 0; i < startFraction_.size(); i++) {
        output.writeDoubleNoTag(startFraction_.get(i));
      }
      if (getEndFractionList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(endFractionMemoizedSerializedSize);
      }
      for (int i = 0; i < endFraction_.size(); i++) {
        output.writeDoubleNoTag(endFraction_.get(i));
      }
      if (getLonlatsList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(lonlatsMemoizedSerializedSize);
      }
      for (int i = 0; i < lonlats_.size(); i++) {
        output.writeDoubleNoTag(lonlats_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getEndIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, endId_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getStartFractionList().size();
        size += dataSize;
        if (!getStartFractionList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        startFractionMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getEndFractionList().size();
        size += dataSize;
        if (!getEndFractionList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        endFractionMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getLonlatsList().size();
        size += dataSize;
        if (!getLonlatsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lonlatsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Dust.MapDustTrace)) {
        return super.equals(obj);
      }
      Dust.MapDustTrace other = (Dust.MapDustTrace) obj;

      boolean result = true;
      result = result && getEndId()
          .equals(other.getEndId());
      result = result && getStartFractionList()
          .equals(other.getStartFractionList());
      result = result && getEndFractionList()
          .equals(other.getEndFractionList());
      result = result && getLonlatsList()
          .equals(other.getLonlatsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ENDID_FIELD_NUMBER;
      hash = (53 * hash) + getEndId().hashCode();
      if (getStartFractionCount() > 0) {
        hash = (37 * hash) + STARTFRACTION_FIELD_NUMBER;
        hash = (53 * hash) + getStartFractionList().hashCode();
      }
      if (getEndFractionCount() > 0) {
        hash = (37 * hash) + ENDFRACTION_FIELD_NUMBER;
        hash = (53 * hash) + getEndFractionList().hashCode();
      }
      if (getLonlatsCount() > 0) {
        hash = (37 * hash) + LONLATS_FIELD_NUMBER;
        hash = (53 * hash) + getLonlatsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Dust.MapDustTrace parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Dust.MapDustTrace parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Dust.MapDustTrace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Dust.MapDustTrace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Dust.MapDustTrace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Dust.MapDustTrace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Dust.MapDustTrace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Dust.MapDustTrace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Dust.MapDustTrace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Dust.MapDustTrace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Dust.MapDustTrace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Dust.MapDustTrace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Dust.MapDustTrace prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapDustTrace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MapDustTrace)
        Dust.MapDustTraceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Dust.internal_static_MapDustTrace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Dust.internal_static_MapDustTrace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Dust.MapDustTrace.class, Dust.MapDustTrace.Builder.class);
      }

      // Construct using Dust.MapDustTrace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        endId_ = "";

        startFraction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        endFraction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        lonlats_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Dust.internal_static_MapDustTrace_descriptor;
      }

      public Dust.MapDustTrace getDefaultInstanceForType() {
        return Dust.MapDustTrace.getDefaultInstance();
      }

      public Dust.MapDustTrace build() {
        Dust.MapDustTrace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Dust.MapDustTrace buildPartial() {
        Dust.MapDustTrace result = new Dust.MapDustTrace(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.endId_ = endId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          startFraction_ = java.util.Collections.unmodifiableList(startFraction_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.startFraction_ = startFraction_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          endFraction_ = java.util.Collections.unmodifiableList(endFraction_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.endFraction_ = endFraction_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          lonlats_ = java.util.Collections.unmodifiableList(lonlats_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.lonlats_ = lonlats_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Dust.MapDustTrace) {
          return mergeFrom((Dust.MapDustTrace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Dust.MapDustTrace other) {
        if (other == Dust.MapDustTrace.getDefaultInstance()) return this;
        if (!other.getEndId().isEmpty()) {
          endId_ = other.endId_;
          onChanged();
        }
        if (!other.startFraction_.isEmpty()) {
          if (startFraction_.isEmpty()) {
            startFraction_ = other.startFraction_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStartFractionIsMutable();
            startFraction_.addAll(other.startFraction_);
          }
          onChanged();
        }
        if (!other.endFraction_.isEmpty()) {
          if (endFraction_.isEmpty()) {
            endFraction_ = other.endFraction_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureEndFractionIsMutable();
            endFraction_.addAll(other.endFraction_);
          }
          onChanged();
        }
        if (!other.lonlats_.isEmpty()) {
          if (lonlats_.isEmpty()) {
            lonlats_ = other.lonlats_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureLonlatsIsMutable();
            lonlats_.addAll(other.lonlats_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Dust.MapDustTrace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Dust.MapDustTrace) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object endId_ = "";
      /**
       * <code>string endId = 1;</code>
       */
      public java.lang.String getEndId() {
        java.lang.Object ref = endId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          endId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string endId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getEndIdBytes() {
        java.lang.Object ref = endId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          endId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string endId = 1;</code>
       */
      public Builder setEndId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        endId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string endId = 1;</code>
       */
      public Builder clearEndId() {
        
        endId_ = getDefaultInstance().getEndId();
        onChanged();
        return this;
      }
      /**
       * <code>string endId = 1;</code>
       */
      public Builder setEndIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        endId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> startFraction_ = java.util.Collections.emptyList();
      private void ensureStartFractionIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          startFraction_ = new java.util.ArrayList<java.lang.Double>(startFraction_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated double startFraction = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getStartFractionList() {
        return java.util.Collections.unmodifiableList(startFraction_);
      }
      /**
       * <code>repeated double startFraction = 2;</code>
       */
      public int getStartFractionCount() {
        return startFraction_.size();
      }
      /**
       * <code>repeated double startFraction = 2;</code>
       */
      public double getStartFraction(int index) {
        return startFraction_.get(index);
      }
      /**
       * <code>repeated double startFraction = 2;</code>
       */
      public Builder setStartFraction(
          int index, double value) {
        ensureStartFractionIsMutable();
        startFraction_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double startFraction = 2;</code>
       */
      public Builder addStartFraction(double value) {
        ensureStartFractionIsMutable();
        startFraction_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double startFraction = 2;</code>
       */
      public Builder addAllStartFraction(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureStartFractionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, startFraction_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double startFraction = 2;</code>
       */
      public Builder clearStartFraction() {
        startFraction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> endFraction_ = java.util.Collections.emptyList();
      private void ensureEndFractionIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          endFraction_ = new java.util.ArrayList<java.lang.Double>(endFraction_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated double endFraction = 3;</code>
       */
      public java.util.List<java.lang.Double>
          getEndFractionList() {
        return java.util.Collections.unmodifiableList(endFraction_);
      }
      /**
       * <code>repeated double endFraction = 3;</code>
       */
      public int getEndFractionCount() {
        return endFraction_.size();
      }
      /**
       * <code>repeated double endFraction = 3;</code>
       */
      public double getEndFraction(int index) {
        return endFraction_.get(index);
      }
      /**
       * <code>repeated double endFraction = 3;</code>
       */
      public Builder setEndFraction(
          int index, double value) {
        ensureEndFractionIsMutable();
        endFraction_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double endFraction = 3;</code>
       */
      public Builder addEndFraction(double value) {
        ensureEndFractionIsMutable();
        endFraction_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double endFraction = 3;</code>
       */
      public Builder addAllEndFraction(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureEndFractionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, endFraction_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double endFraction = 3;</code>
       */
      public Builder clearEndFraction() {
        endFraction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> lonlats_ = java.util.Collections.emptyList();
      private void ensureLonlatsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          lonlats_ = new java.util.ArrayList<java.lang.Double>(lonlats_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated double lonlats = 4;</code>
       */
      public java.util.List<java.lang.Double>
          getLonlatsList() {
        return java.util.Collections.unmodifiableList(lonlats_);
      }
      /**
       * <code>repeated double lonlats = 4;</code>
       */
      public int getLonlatsCount() {
        return lonlats_.size();
      }
      /**
       * <code>repeated double lonlats = 4;</code>
       */
      public double getLonlats(int index) {
        return lonlats_.get(index);
      }
      /**
       * <code>repeated double lonlats = 4;</code>
       */
      public Builder setLonlats(
          int index, double value) {
        ensureLonlatsIsMutable();
        lonlats_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double lonlats = 4;</code>
       */
      public Builder addLonlats(double value) {
        ensureLonlatsIsMutable();
        lonlats_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double lonlats = 4;</code>
       */
      public Builder addAllLonlats(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureLonlatsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lonlats_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double lonlats = 4;</code>
       */
      public Builder clearLonlats() {
        lonlats_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MapDustTrace)
    }

    // @@protoc_insertion_point(class_scope:MapDustTrace)
    private static final Dust.MapDustTrace DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Dust.MapDustTrace();
    }

    public static Dust.MapDustTrace getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MapDustTrace>
        PARSER = new com.google.protobuf.AbstractParser<MapDustTrace>() {
      public MapDustTrace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MapDustTrace(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MapDustTrace> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MapDustTrace> getParserForType() {
      return PARSER;
    }

    public Dust.MapDustTrace getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MapDustOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MapDust)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string startId = 1;</code>
     */
    java.lang.String getStartId();
    /**
     * <code>string startId = 1;</code>
     */
    com.google.protobuf.ByteString
        getStartIdBytes();

    /**
     * <code>repeated .MapDustTrace traceData = 2;</code>
     */
    java.util.List<Dust.MapDustTrace> 
        getTraceDataList();
    /**
     * <code>repeated .MapDustTrace traceData = 2;</code>
     */
    Dust.MapDustTrace getTraceData(int index);
    /**
     * <code>repeated .MapDustTrace traceData = 2;</code>
     */
    int getTraceDataCount();
    /**
     * <code>repeated .MapDustTrace traceData = 2;</code>
     */
    java.util.List<? extends Dust.MapDustTraceOrBuilder> 
        getTraceDataOrBuilderList();
    /**
     * <code>repeated .MapDustTrace traceData = 2;</code>
     */
    Dust.MapDustTraceOrBuilder getTraceDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MapDust}
   */
  public  static final class MapDust extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MapDust)
      MapDustOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MapDust.newBuilder() to construct.
    private MapDust(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MapDust() {
      startId_ = "";
      traceData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MapDust(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              startId_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                traceData_ = new java.util.ArrayList<Dust.MapDustTrace>();
                mutable_bitField0_ |= 0x00000002;
              }
              traceData_.add(
                  input.readMessage(Dust.MapDustTrace.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          traceData_ = java.util.Collections.unmodifiableList(traceData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Dust.internal_static_MapDust_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Dust.internal_static_MapDust_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Dust.MapDust.class, Dust.MapDust.Builder.class);
    }

    private int bitField0_;
    public static final int STARTID_FIELD_NUMBER = 1;
    private volatile java.lang.Object startId_;
    /**
     * <code>string startId = 1;</code>
     */
    public java.lang.String getStartId() {
      java.lang.Object ref = startId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        startId_ = s;
        return s;
      }
    }
    /**
     * <code>string startId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStartIdBytes() {
      java.lang.Object ref = startId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        startId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRACEDATA_FIELD_NUMBER = 2;
    private java.util.List<Dust.MapDustTrace> traceData_;
    /**
     * <code>repeated .MapDustTrace traceData = 2;</code>
     */
    public java.util.List<Dust.MapDustTrace> getTraceDataList() {
      return traceData_;
    }
    /**
     * <code>repeated .MapDustTrace traceData = 2;</code>
     */
    public java.util.List<? extends Dust.MapDustTraceOrBuilder> 
        getTraceDataOrBuilderList() {
      return traceData_;
    }
    /**
     * <code>repeated .MapDustTrace traceData = 2;</code>
     */
    public int getTraceDataCount() {
      return traceData_.size();
    }
    /**
     * <code>repeated .MapDustTrace traceData = 2;</code>
     */
    public Dust.MapDustTrace getTraceData(int index) {
      return traceData_.get(index);
    }
    /**
     * <code>repeated .MapDustTrace traceData = 2;</code>
     */
    public Dust.MapDustTraceOrBuilder getTraceDataOrBuilder(
        int index) {
      return traceData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getStartIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, startId_);
      }
      for (int i = 0; i < traceData_.size(); i++) {
        output.writeMessage(2, traceData_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getStartIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, startId_);
      }
      for (int i = 0; i < traceData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, traceData_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Dust.MapDust)) {
        return super.equals(obj);
      }
      Dust.MapDust other = (Dust.MapDust) obj;

      boolean result = true;
      result = result && getStartId()
          .equals(other.getStartId());
      result = result && getTraceDataList()
          .equals(other.getTraceDataList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STARTID_FIELD_NUMBER;
      hash = (53 * hash) + getStartId().hashCode();
      if (getTraceDataCount() > 0) {
        hash = (37 * hash) + TRACEDATA_FIELD_NUMBER;
        hash = (53 * hash) + getTraceDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Dust.MapDust parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Dust.MapDust parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Dust.MapDust parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Dust.MapDust parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Dust.MapDust parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Dust.MapDust parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Dust.MapDust parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Dust.MapDust parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Dust.MapDust parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Dust.MapDust parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Dust.MapDust parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Dust.MapDust parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Dust.MapDust prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MapDust}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MapDust)
        Dust.MapDustOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Dust.internal_static_MapDust_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Dust.internal_static_MapDust_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Dust.MapDust.class, Dust.MapDust.Builder.class);
      }

      // Construct using Dust.MapDust.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTraceDataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        startId_ = "";

        if (traceDataBuilder_ == null) {
          traceData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          traceDataBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Dust.internal_static_MapDust_descriptor;
      }

      public Dust.MapDust getDefaultInstanceForType() {
        return Dust.MapDust.getDefaultInstance();
      }

      public Dust.MapDust build() {
        Dust.MapDust result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Dust.MapDust buildPartial() {
        Dust.MapDust result = new Dust.MapDust(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.startId_ = startId_;
        if (traceDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            traceData_ = java.util.Collections.unmodifiableList(traceData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.traceData_ = traceData_;
        } else {
          result.traceData_ = traceDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Dust.MapDust) {
          return mergeFrom((Dust.MapDust)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Dust.MapDust other) {
        if (other == Dust.MapDust.getDefaultInstance()) return this;
        if (!other.getStartId().isEmpty()) {
          startId_ = other.startId_;
          onChanged();
        }
        if (traceDataBuilder_ == null) {
          if (!other.traceData_.isEmpty()) {
            if (traceData_.isEmpty()) {
              traceData_ = other.traceData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTraceDataIsMutable();
              traceData_.addAll(other.traceData_);
            }
            onChanged();
          }
        } else {
          if (!other.traceData_.isEmpty()) {
            if (traceDataBuilder_.isEmpty()) {
              traceDataBuilder_.dispose();
              traceDataBuilder_ = null;
              traceData_ = other.traceData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              traceDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTraceDataFieldBuilder() : null;
            } else {
              traceDataBuilder_.addAllMessages(other.traceData_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Dust.MapDust parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Dust.MapDust) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object startId_ = "";
      /**
       * <code>string startId = 1;</code>
       */
      public java.lang.String getStartId() {
        java.lang.Object ref = startId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          startId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string startId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStartIdBytes() {
        java.lang.Object ref = startId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          startId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string startId = 1;</code>
       */
      public Builder setStartId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        startId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string startId = 1;</code>
       */
      public Builder clearStartId() {
        
        startId_ = getDefaultInstance().getStartId();
        onChanged();
        return this;
      }
      /**
       * <code>string startId = 1;</code>
       */
      public Builder setStartIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        startId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<Dust.MapDustTrace> traceData_ =
        java.util.Collections.emptyList();
      private void ensureTraceDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          traceData_ = new java.util.ArrayList<Dust.MapDustTrace>(traceData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Dust.MapDustTrace, Dust.MapDustTrace.Builder, Dust.MapDustTraceOrBuilder> traceDataBuilder_;

      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public java.util.List<Dust.MapDustTrace> getTraceDataList() {
        if (traceDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(traceData_);
        } else {
          return traceDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public int getTraceDataCount() {
        if (traceDataBuilder_ == null) {
          return traceData_.size();
        } else {
          return traceDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Dust.MapDustTrace getTraceData(int index) {
        if (traceDataBuilder_ == null) {
          return traceData_.get(index);
        } else {
          return traceDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Builder setTraceData(
          int index, Dust.MapDustTrace value) {
        if (traceDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTraceDataIsMutable();
          traceData_.set(index, value);
          onChanged();
        } else {
          traceDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Builder setTraceData(
          int index, Dust.MapDustTrace.Builder builderForValue) {
        if (traceDataBuilder_ == null) {
          ensureTraceDataIsMutable();
          traceData_.set(index, builderForValue.build());
          onChanged();
        } else {
          traceDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Builder addTraceData(Dust.MapDustTrace value) {
        if (traceDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTraceDataIsMutable();
          traceData_.add(value);
          onChanged();
        } else {
          traceDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Builder addTraceData(
          int index, Dust.MapDustTrace value) {
        if (traceDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTraceDataIsMutable();
          traceData_.add(index, value);
          onChanged();
        } else {
          traceDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Builder addTraceData(
          Dust.MapDustTrace.Builder builderForValue) {
        if (traceDataBuilder_ == null) {
          ensureTraceDataIsMutable();
          traceData_.add(builderForValue.build());
          onChanged();
        } else {
          traceDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Builder addTraceData(
          int index, Dust.MapDustTrace.Builder builderForValue) {
        if (traceDataBuilder_ == null) {
          ensureTraceDataIsMutable();
          traceData_.add(index, builderForValue.build());
          onChanged();
        } else {
          traceDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Builder addAllTraceData(
          java.lang.Iterable<? extends Dust.MapDustTrace> values) {
        if (traceDataBuilder_ == null) {
          ensureTraceDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, traceData_);
          onChanged();
        } else {
          traceDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Builder clearTraceData() {
        if (traceDataBuilder_ == null) {
          traceData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          traceDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Builder removeTraceData(int index) {
        if (traceDataBuilder_ == null) {
          ensureTraceDataIsMutable();
          traceData_.remove(index);
          onChanged();
        } else {
          traceDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Dust.MapDustTrace.Builder getTraceDataBuilder(
          int index) {
        return getTraceDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Dust.MapDustTraceOrBuilder getTraceDataOrBuilder(
          int index) {
        if (traceDataBuilder_ == null) {
          return traceData_.get(index);  } else {
          return traceDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public java.util.List<? extends Dust.MapDustTraceOrBuilder> 
           getTraceDataOrBuilderList() {
        if (traceDataBuilder_ != null) {
          return traceDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(traceData_);
        }
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Dust.MapDustTrace.Builder addTraceDataBuilder() {
        return getTraceDataFieldBuilder().addBuilder(
            Dust.MapDustTrace.getDefaultInstance());
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public Dust.MapDustTrace.Builder addTraceDataBuilder(
          int index) {
        return getTraceDataFieldBuilder().addBuilder(
            index, Dust.MapDustTrace.getDefaultInstance());
      }
      /**
       * <code>repeated .MapDustTrace traceData = 2;</code>
       */
      public java.util.List<Dust.MapDustTrace.Builder> 
           getTraceDataBuilderList() {
        return getTraceDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Dust.MapDustTrace, Dust.MapDustTrace.Builder, Dust.MapDustTraceOrBuilder> 
          getTraceDataFieldBuilder() {
        if (traceDataBuilder_ == null) {
          traceDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Dust.MapDustTrace, Dust.MapDustTrace.Builder, Dust.MapDustTraceOrBuilder>(
                  traceData_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          traceData_ = null;
        }
        return traceDataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MapDust)
    }

    // @@protoc_insertion_point(class_scope:MapDust)
    private static final Dust.MapDust DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Dust.MapDust();
    }

    public static Dust.MapDust getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MapDust>
        PARSER = new com.google.protobuf.AbstractParser<MapDust>() {
      public MapDust parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MapDust(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MapDust> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MapDust> getParserForType() {
      return PARSER;
    }

    public Dust.MapDust getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MapDustTrace_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MapDustTrace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MapDust_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MapDust_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ndust.proto\"Z\n\014MapDustTrace\022\r\n\005endId\030\001 " +
      "\001(\t\022\025\n\rstartFraction\030\002 \003(\001\022\023\n\013endFractio" +
      "n\030\003 \003(\001\022\017\n\007lonlats\030\004 \003(\001\"<\n\007MapDust\022\017\n\007s" +
      "tartId\030\001 \001(\t\022 \n\ttraceData\030\002 \003(\0132\r.MapDus" +
      "tTraceb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_MapDustTrace_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MapDustTrace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MapDustTrace_descriptor,
        new java.lang.String[] { "EndId", "StartFraction", "EndFraction", "Lonlats", });
    internal_static_MapDust_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_MapDust_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MapDust_descriptor,
        new java.lang.String[] { "StartId", "TraceData", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
